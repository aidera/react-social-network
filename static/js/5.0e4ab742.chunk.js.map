{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.sass","components/Dialogs/Dialogs.module.sass","components/Dialogs/Dialog/Dialog.module.sass","components/Dialogs/Message/Message.module.sass","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","redux/dialogs-selectors.js","components/Dialogs/DialogsContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","Field","input","meta","Element","child","props","hasError","touched","error","className","s","formControl","Textarea","Input","module","exports","Dialog","React","memo","userID","name","dialog","to","activeClassName","active","Message","messageText","message","messageInnerContainer","maxLength100","Dialogs","dialogs","messages","dialogsList","map","key","id","messagesList","messageID","from","SendMessageFormRedux","onSubmit","values","sendMessage","sendMessageTextarea","SendMessageForm","handleSubmit","sendMessageBlock","component","placeholder","validate","reduxForm","form","mapStateToProps","state","isAuth","auth","getMessages","dialogsPage","getDialogs","compose","connect","dispatch","newMessage","sendMessageActionCreator","Component","RedirectComponent","this"],"mappings":"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","file":"static/js/5.0e4ab742.chunk.js","sourcesContent":["export const required = value => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max lenght is ${maxLength} simbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './FormsControls.module.sass'\r\n\r\n\r\n\r\nconst Field = ({input, meta, child, Element, ...props})  => {\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError && s.error)}>\r\n            <Element {...input} {...props} />\r\n            <br/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return <Field {...props} Element={'textarea'}/>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return <Field {...props} Element={'input'}/>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2FQCU\",\"error\":\"FormsControls_error__3ILIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__azdOc\",\"dialogsList\":\"Dialogs_dialogsList__3HEzI\",\"sendMessageBlock\":\"Dialogs_sendMessageBlock__2OxWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2dEEq\",\"active\":\"Dialog_active__2dkw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2LqB3\",\"messageInnerContainer\":\"Message_messageInnerContainer__eXKYE\"};","import React from 'react';\r\nimport s from './Dialog.module.sass';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Dialog = React.memo(({userID, name, ...props}) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/'+userID} activeClassName={s.active}>{name}</NavLink>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.sass';\r\n\r\nconst Message = React.memo(({messageText, ...props}) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.messageInnerContainer}>\r\n                <div className=\"messageText\">{messageText}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.sass';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nlet maxLength100 = maxLengthCreator(100);\r\n\r\n\r\n\r\nconst Dialogs = React.memo(({dialogs, messages, ...props}) => {\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.sendMessageTextarea)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsList}>\r\n\r\n                { dialogs.map( dialog => (\r\n                    <Dialog key={dialog.id} name={dialog.name} userID={dialog.id} />\r\n                )) }\r\n\r\n            </div>\r\n            <div className={s.messagesList}>\r\n                \r\n                { messages.map( message => (\r\n                    <Message key={message.id} messageID={message.id} from={message.from} messageText={message.messageText} />\r\n                )) }\r\n\r\n                <SendMessageFormRedux onSubmit={addNewMessage} />\r\n        \r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nconst SendMessageForm = React.memo(({handleSubmit, ...props}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={s.sendMessageBlock}>\r\n                    <Field\r\n                        name={'sendMessageTextarea'}\r\n                        component={Textarea}\r\n                        placeholder={'write your message'}\r\n                        validate={[required,maxLength100]}\r\n                    />\r\n                <button\r\n                    className='button'\r\n                >Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n});\r\n\r\nconst SendMessageFormRedux = reduxForm({form: 'sendMessageForm'})(SendMessageForm);\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","export const getMessages = (state) => {\r\n    return state.dialogsPage.messages;\r\n}\r\n\r\nexport const getDialogs = (state) => {\r\n    return state.dialogsPage.dialogs;\r\n}","import Dialogs from './Dialogs';\r\nimport {sendMessageActionCreator} from '../../redux/dialogs-reducer'\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogs, getMessages} from \"../../redux/dialogs-selectors\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: getDialogs(state),\r\n        messages: getMessages(state),\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessage) => {\r\n            dispatch(sendMessageActionCreator(newMessage))\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}