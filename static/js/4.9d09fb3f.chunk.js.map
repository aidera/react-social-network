{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.sass","components/Profile/Profile.module.sass","components/Profile/MyPosts/MyPosts.module.sass","components/Profile/MyPosts/Post/Post.module.sass","components/Profile/ProfileInfo/ProfileInfo.module.sass","components/Profile/ProfileInfo/Status/Status.module.sass","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profile-selectors.js","components/Profile/MyPosts/MyPostsContainer.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/Status/Status.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","Field","input","meta","Element","child","props","hasError","touched","error","className","s","formControl","Textarea","Input","module","exports","Post","React","memo","children","likesCount","post","avatar","src","foxImg","alt","postText","buttons","maxLength10","MyPostForm","handleSubmit","onSubmit","name","component","placeholder","validate","MyPostFormRedux","reduxForm","form","MyPosts","posts","addPost","newPost","values","myPostTextarea","map","key","id","postID","text","getProfile","state","profilePage","profile","getPosts","getStatus","status","MyPostsContainer","connect","dispatch","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","Status","updateUserStatus","useState","editMode","setEditMode","localStatus","setLocalStatus","useEffect","onDoubleClick","statusBlock","onChange","e","currentTarget","autoFocus","onBlur","type","ProfileInfo","profileInfo","img","style","backgroundImage","photos","large","description","fullName","lookingForAJob","lookingForAJobDescription","keys","contacts","keyName","Profile","Preloader","ProfileContainer","this","getUserProfile","getUserStatus","authUserId","userId","match","params","history","PureComponent","compose","isAuth","getIsAuth","getUserId","withRouter"],"mappings":"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","file":"static/js/4.9d09fb3f.chunk.js","sourcesContent":["export const required = value => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max lenght is ${maxLength} simbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from './FormsControls.module.sass'\r\n\r\n\r\n\r\nconst Field = ({input, meta, child, Element, ...props})  => {\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError && s.error)}>\r\n            <Element {...input} {...props} />\r\n            <br/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return <Field {...props} Element={'textarea'}/>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return <Field {...props} Element={'input'}/>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2FQCU\",\"error\":\"FormsControls_error__3ILIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1CZOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3bUYf\",\"newPost\":\"MyPosts_newPost__2jfgz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__cS9rr\",\"avatar\":\"Post_avatar__3NXVE\",\"postText\":\"Post_postText__2olTO\",\"buttons\":\"Post_buttons__-I5GZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__R7UVs\",\"avatar\":\"ProfileInfo_avatar__2ZiPs\",\"img\":\"ProfileInfo_img__1tbs2\",\"description\":\"ProfileInfo_description__1UKiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"Status_statusBlock__2ivGl\"};","import React from 'react';\r\nimport s from './Post.module.sass';\r\nimport foxImg from '../../../../assets/images/fox.png';\r\n\r\nconst Post = React.memo( ({children, likesCount, ...props}) => {\r\n\r\n    return (\r\n\r\n        <div className={s.post}>\r\n            <div className={s.avatar}>\r\n                <img src={foxImg} alt=\"avatar\"/>\r\n            </div>\r\n            <div className={s.postText}>\r\n                {children}\r\n            </div>\r\n            <div className={s.buttons}>\r\n                <span>Like {likesCount}</span>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n})\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.sass';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPostForm = React.memo(({handleSubmit, ...props}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <Field\r\n                name={'myPostTextarea'}\r\n                component={Textarea}\r\n                placeholder={'Type something clever :)'}\r\n                validate={[required, maxLength10]}\r\n            />\r\n            <button>Add post</button>\r\n\r\n        </form>\r\n    );\r\n})\r\n\r\nconst MyPostFormRedux = reduxForm({form:'myPostForm'})(MyPostForm)\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo(({posts, addPost, ...props}) => {\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        addPost(values.myPostTextarea);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <h1>My Posts</h1>\r\n            <div className={s.newPost}>\r\n\r\n            <MyPostFormRedux\r\n                onSubmit={onAddPost}\r\n            />\r\n\r\n            </div>\r\n            <div>\r\n                { posts.map( post => (\r\n                    <Post\r\n                        key={post.id}\r\n                        postID={post.id}\r\n                        likesCount={post.likesCount}\r\n                    >\r\n                        {post.text}</Post>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","export const getProfile = (state) => {\r\n    return state.profilePage.profile;\r\n}\r\n\r\nexport const getPosts = (state) => {\r\n    return state.profilePage.posts;\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.status;\r\n}","import MyPosts from './MyPosts';\r\nimport {addPost} from '../../../redux/profile-reducer'\r\nimport {connect} from \"react-redux\";\r\nimport {getPosts} from \"../../../redux/profile-selectors\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: getPosts(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPost(newPost));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\r\nimport s from './Status.module.sass'\r\n\r\nconst Status = React.memo(({status, updateUserStatus, ...props}) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [localStatus, setLocalStatus] = useState(status);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        updateUserStatus(localStatus)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setLocalStatus(e.currentTarget.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLocalStatus(status)\r\n    }, [status])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div onDoubleClick={activateEditMode} className={s.statusBlock}>\r\n                {status || '------'}\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div className={s.statusBlock}>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    type=\"text\"\r\n                    value={localStatus}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n})\r\n\r\nexport default Status;","import React from 'react';\r\nimport s from './ProfileInfo.module.sass';\r\nimport Status from './Status/Status'\r\n\r\nconst ProfileInfo = React.memo(({profile, status, updateUserStatus, ...props}) => {\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.avatar}>\r\n                <div className={s.img} style={{backgroundImage: `url(${profile.photos.large})`}} alt=\"avatar\"/>\r\n            </div>\r\n\r\n            <div className={s.description}>\r\n                <h1>{profile.fullName}</h1>\r\n                <Status\r\n                    status={status}\r\n                    updateUserStatus={updateUserStatus}\r\n                />\r\n                <br />Looking for a job: {profile.lookingForAJob === true ? 'yes' : 'no'}\r\n                <br />Description: {profile.lookingForAJobDescription}\r\n                <br />Contacts:\r\n                    <ul>\r\n                        {Object.keys(profile.contacts).map((keyName, i) => (\r\n                            <li key={i}>\r\n                                <span>{keyName}: {profile.contacts[keyName]}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.sass';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = React.memo( ({profile, status, updateUserStatus, ...props}) => {\r\n    if(!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.profile} `}>\r\n            <div className=\"content-container\">\r\n                \r\n                <ProfileInfo\r\n                    profile={profile}\r\n                    status={status}\r\n                    updateUserStatus={updateUserStatus}\r\n                />\r\n                <MyPostsContainer/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Profile;","import Profile from './Profile';\r\nimport React from \"react\";\r\nimport {getUserProfile,getUserStatus,updateUserStatus} from '../../redux/profile-reducer'\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getProfile, getStatus} from \"../../redux/profile-selectors\";\r\nimport {getIsAuth, getUserId} from \"../../redux/auth-selectors\";\r\n\r\n\r\nclass ProfileContainer extends React.PureComponent {\r\n\r\n    componentDidMount() {\r\n        const {getUserProfile, getUserStatus, authUserId} = this.props;\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = authUserId\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        getUserProfile(userId);\r\n        getUserStatus(userId);\r\n\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateUserStatus={this.props.updateUserStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: getProfile(state),\r\n    status: getStatus(state),\r\n    isAuth: getIsAuth(state),\r\n    authUserId: getUserId(state)\r\n});\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile,getUserStatus,updateUserStatus}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}