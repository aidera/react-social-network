{"version":3,"sources":["components/Header/Header.module.sass","redux/auth-reducer.js","components/Header/MobileMenu/MobileMenu.module.sass","components/Navbar/Navbar.module.sass","components/common/Preloader/Preloader.jsx","redux/auth-selectors.js","assets/images/loader.svg","redux/profile-reducer.js","redux/posts-reducer.js","redux/dialogs-reducer.js","components/common/Overlay/Overlay.jsx","utils/animations/show.js","utils/animations/hide.js","utils/object-helpers.js","redux/users-reducer.js","api/api.js","components/common/Preloader/Preloader.module.sass","assets/images/menu.svg","components/common/Overlay/Overlay.module.sass","components/Footer/Footer.module.sass","serviceWorker.js","redux/app-reducer.js","redux/app-selectors.js","redux/redux-store.js","components/Header/MobileMenu/MobileMenu.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","App.jsx","index.js"],"names":["module","exports","initialState","userId","email","login","isAuth","captchaUrl","isLoading","setAuthUserData","type","payload","setIsLoading","status","checkAuth","dispatch","a","authAPI","response","resultCode","data","id","password","rememberMe","captcha","Promise","resolve","getCaptchaUrl","message","messages","length","reject","securityAPI","url","logout","authReducer","state","action","Preloader","className","s","preloader","src","img","alt","getUserId","auth","getLogin","getIsAuth","getIsLoading","profile","isLoadingAvatar","isLoadingProfileInfoChanges","isLoadingStatus","setUserProfile","setUserStatus","setIsLoadingStatus","setIsLoadingProfileInfoChanges","setIsLoadingAvatar","getUserProfile","profileAPI","getUsersProfile","then","getUserStatus","catch","error","undefined","getStatus","updateUserStatus","updateStatus","savePhoto","file","photos","saveProfileInfo","getState","profileReducer","posts","likesCount","text","maxPostId","likedPosts","addPost","newPost","addPostSuccess","deletePost","postId","deletePostSuccess","likePost","likePostSuccess","dislikePost","dislikePostSuccess","postReducer","deletePostArr","i","splice","isPostLiked","some","number","newLikedPostsArr","push","likePostsArr","isPostLiked2","filter","dislikePostsArr","SET_USER","dialogId","time","from","messageText","dialogs","opponentId","users","maxMessages","sendMessage","newMessage","getUserFromServer","setUser","dialogsReducer","Overlay","React","memo","onClick","overlay","show","target","cb","anime","targets","keyframes","opacity","duration","easing","loop","complete","hide","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","FOLLOW","pageSize","totalUsersCount","currentPage","pagesCount","isFetching","followingInProgress","setCurrentPage","page","toggleIsFetching","toggleFollowingProgress","requestUsers","usersAPI","totalCount","pages","Math","ceil","followUnfollowFlow","methodAPI","actionCreator","follow","followSuccess","unfollow","unfollowSuccess","usersReducer","followed","instance","axios","withCredentials","baseURL","headers","get","post","delete","put","photoFile","formData","FormData","append","Boolean","window","location","hostname","match","initialized","appReducer","getInitialized","app","reducers","combineReducers","profilePage","postsPage","postsReducer","dialogsPage","usersPage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","MobileMenu","closeMobileMenu","mobileMenu","useRef","useEffect","current","onCloseMobileMenu","ref","mobileMenuContainer","to","activeClassName","active","Header","useState","isOpenMobileMenu","setIsOpenMobileMenu","header","cn","container","href","logo","menuController","menuImg","loginBlock","userLogin","HeaderComponent","this","props","PureComponent","connect","Navbar","navbar","Footer","footer","ProfileContainer","lazy","DialogsContainer","UsersContainer","LoginContainer","News","Music","Settings","ErrorContent","App","catchAllUnhandledErrors","reason","promise","console","log","initializeApp","addEventListener","removeEventListener","HeaderContainer","fallback","path","render","exact","errorType","h1","h2","linkUrl","linkText","Component","AppContainer","withRouter","SamuraiJSApp","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.041f21d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__IwUb1\",\"container\":\"Header_container__3GB8E\",\"logo\":\"Header_logo__mbnhI\",\"menuController\":\"Header_menuController__3R4j9\",\"loginBlock\":\"Header_loginBlock__2518E\",\"userLogin\":\"Header_userLogin__1ZD75\"};","import {authAPI, securityAPI} from \"../api/api\";\r\n\r\n\r\nconst SET_AUTH_USER_DATA = 'auth/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL = 'auth/GET_CAPTCHA_URL';\r\nconst DELETE_CAPTCHA = 'auth/DELETE_CAPTCHA';\r\nconst SET_IS_LOADING = 'auth/SET_IS_LOADING';\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n    isLoading: false\r\n};\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        case DELETE_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                captchaUrl: null\r\n            };\r\n\r\n        case SET_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.status\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_AUTH_USER_DATA, payload: {userId, email, login, isAuth} });\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({ type: GET_CAPTCHA_URL, payload: {captchaUrl} });\r\nexport const deleteCaptcha = () => ({ type: DELETE_CAPTCHA });\r\nexport const setIsLoading = (status) => ({ type: SET_IS_LOADING, status });\r\n\r\nexport const checkAuth = () => async (dispatch) => {\r\n    const response = await authAPI.checkAuth()\r\n\r\n    if(response.resultCode === 0){\r\n        const {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    dispatch(setIsLoading(true));\r\n\r\n    const response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n    if(response.data.resultCode === 0){\r\n        await dispatch(checkAuth());\r\n        dispatch(deleteCaptcha());\r\n        dispatch(setIsLoading(false));\r\n        return Promise.resolve(null);\r\n    }else{\r\n        if (response.data.resultCode === 10){\r\n            await dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Server error. Please, try later';\r\n        dispatch(setIsLoading(false));\r\n        return Promise.reject(message);\r\n    }\r\n\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captcha = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captcha));\r\n\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobileMenuContainer\":\"MobileMenu_mobileMenuContainer__1UmkP\",\"mobileMenu\":\"MobileMenu_mobileMenu__2COii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__30h2V\",\"active\":\"Navbar_active__3RDi9\"};","import React from 'react';\r\nimport s from './Preloader.module.sass'\r\nimport img from '../../../assets/images/loader.svg'\r\n\r\nlet Preloader = () => {\r\n\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={img} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","export const getUserId = (state) => {\r\n    return state.auth.userId;\r\n}\r\n\r\nexport const getEmail = (state) => {\r\n    return state.auth.email;\r\n}\r\n\r\nexport const getLogin = (state) => {\r\n    return state.auth.login;\r\n}\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const getCaptchaUrl = (state) => {\r\n    return state.auth.captchaUrl;\r\n}\r\nexport const getIsLoading = (state) => {\r\n    return state.auth.isLoading;\r\n}","module.exports = __webpack_public_path__ + \"static/media/loader.9205748d.svg\";","import {profileAPI} from \"../api/api\";\r\n\r\n\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile/SET_USER_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS';\r\nconst SET_IS_LOADING_STATUS = 'profile/SET_IS_LOADING_STATUS';\r\nconst SET_IS_LOADING_AVATAR = 'profile/SET_IS_LOADING_AVATAR';\r\nconst SET_IS_LOADING_PROFILE_INFO_CHANGES = 'profile/SET_IS_LOADING_PROFILE_INFO_CHANGES';\r\n\r\n\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    isLoadingAvatar: false,\r\n    isLoadingProfileInfoChanges: false,\r\n    status: '',\r\n    isLoadingStatus: false,\r\n\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            };\r\n\r\n        case SET_IS_LOADING_STATUS:\r\n            return {\r\n                ...state,\r\n                isLoadingStatus: action.status\r\n            };\r\n\r\n        case SET_IS_LOADING_PROFILE_INFO_CHANGES:\r\n            return {\r\n                ...state,\r\n                isLoadingProfileInfoChanges: action.status\r\n            };\r\n\r\n        case SET_IS_LOADING_AVATAR:\r\n            return {\r\n                ...state,\r\n                isLoadingAvatar: action.status\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) =>({ type: SET_USER_PROFILE,  profile});\r\nexport const setUserStatus = (status) =>({ type: SET_USER_STATUS,  status});\r\nexport const savePhotoSuccess = (photos) =>({ type: SAVE_PHOTO_SUCCESS,  photos});\r\nexport const setIsLoadingStatus = (status) =>({ type: SET_IS_LOADING_STATUS,  status});\r\nexport const setIsLoadingProfileInfoChanges = (status) =>({ type: SET_IS_LOADING_PROFILE_INFO_CHANGES,  status});\r\nexport const setIsLoadingAvatar = (status) =>({ type: SET_IS_LOADING_AVATAR,  status});\r\n\r\n\r\n\r\nexport const getUserProfile = (userId) =>  {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(setUserProfile(null));\r\n\r\n        if(userId){\r\n\r\n            await profileAPI.getUsersProfile(userId)\r\n                .then(async (response) => {\r\n                    dispatch(setUserProfile(response));\r\n                    dispatch(getUserStatus(userId));\r\n                    return Promise.resolve(null);\r\n                })\r\n                .catch((error) => {\r\n                    dispatch(setUserProfile(undefined));\r\n                    // return Promise.reject(error)\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n\r\n    dispatch(setUserStatus(''));\r\n\r\n    if(userId){\r\n        try{\r\n            const response = await profileAPI.getStatus(userId);\r\n            dispatch(setUserStatus(response));\r\n        }catch(error){\r\n            return Promise.reject('No such user or server error');\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    dispatch(setIsLoadingStatus(true));\r\n\r\n    const response = await profileAPI.updateStatus(status);\r\n    dispatch(setIsLoadingStatus(false));\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setUserStatus(status));\r\n        return Promise.resolve(null);\r\n    }else{\r\n        if(response.data){\r\n            return Promise.reject(response.data.messages[0]);\r\n        }else{\r\n            return Promise.reject('Server error');\r\n        }\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n\r\n    dispatch(setIsLoadingAvatar(true));\r\n    const response = await profileAPI.savePhoto(file);\r\n    dispatch(setIsLoadingAvatar(false));\r\n\r\n    if(response.data.resultCode === 0){\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n        return Promise.resolve(null);\r\n    }else{\r\n        if(response.data){\r\n            return Promise.reject(response.data.messages[0]);\r\n        }else{\r\n            return Promise.reject('Server error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const saveProfileInfo = (profile) => async (dispatch, getState) => {\r\n\r\n    dispatch(setIsLoadingProfileInfoChanges(true));\r\n\r\n    const userId = await getState().auth.userId;\r\n    const response = await profileAPI.saveProfileInfo(profile);\r\n\r\n    dispatch(setIsLoadingProfileInfoChanges(false));\r\n\r\n    if(response.data.resultCode === 0){\r\n        await dispatch(getUserProfile(userId));\r\n        return Promise.resolve(null);\r\n    }else{\r\n        if(response.data){\r\n            return Promise.reject(response.data.messages[0]);\r\n        }else{\r\n            return Promise.reject('Server error');\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default profileReducer;","const ADD_POST = 'posts/ADD-POST';\r\nconst DELETE_POST = 'posts/DELETE_POST';\r\nconst LIKE_POST = 'posts/LIKE_POST';\r\nconst DISLIKE_POST = 'posts/DISLIKE_POST';\r\n\r\n\r\n\r\nlet initialState = {\r\n    posts:[\r\n        {id: 1, likesCount: 1, text: 'OOP Typically depends on shared state. Objects and behaviors are typically tacked together on the same entity, which may be accessed at random by any number of functions with non-deterministic order, which may lead to undesirable behavior such as race conditions.'},\r\n        {id: 2, likesCount: 5, text: 'It’s easy to understand the basic concept of objects and easy to interpret the meaning of method calls. OOP tends to use an imperative style rather than a declarative style, which reads like a straight-forward set of instructions for the computer to follow.'},\r\n        {id: 3, likesCount: 2, text: 'Using the functional paradigm, programmers avoid any shared state or side-effects, which eliminates bugs caused by multiple functions competing for the same resources. With features such as the availability of point-free style (aka tacit programming), functions tend to be radically simplified and easily recomposed for more generally reusable code compared to OOP.'},\r\n        {id: 4, likesCount: 40, text: 'Over exploitation of FP features such as point-free style and large compositions can potentially reduce readability because the resulting code is often more abstractly specified, more terse, and less concrete.\\n\\n' +\r\n                'More people are familiar with OO and imperative programming than functional programming, so even common idioms in functional programming can be confusing to new team members.'},\r\n    ],\r\n    maxPostId:4,\r\n    likedPosts: [1,4],\r\n};\r\n\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: state.maxPostId+1, text: action.newPost,likesCount: 0}],\r\n                maxPostId: state.maxPostId+1\r\n            };\r\n\r\n\r\n        case DELETE_POST:\r\n            let deletePostArr = [...state.posts];\r\n            for(let i = 0; i < deletePostArr.length; i++){\r\n                if(deletePostArr[i].id === action.postId){\r\n                    deletePostArr.splice(i, 1);\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: deletePostArr\r\n            };\r\n\r\n\r\n        case LIKE_POST:\r\n            let isPostLiked = state.likedPosts.some((number) => number === action.postId)\r\n            if(!isPostLiked){\r\n\r\n                let newLikedPostsArr = state.likedPosts;\r\n                newLikedPostsArr.push(action.postId);\r\n\r\n                let likePostsArr =  [...state.posts];\r\n                for(let i = 0; i < likePostsArr.length; i++){\r\n                    if(likePostsArr[i].id === action.postId){\r\n                        likePostsArr[i].likesCount ++;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    likedPosts: newLikedPostsArr,\r\n                    posts: likePostsArr\r\n                };\r\n            }\r\n            return state;\r\n\r\n\r\n        case DISLIKE_POST:\r\n            let isPostLiked2 = state.likedPosts.some((number) => number === action.postId)\r\n            if(isPostLiked2){\r\n                let newLikedPostsArr = state.likedPosts.filter((number) => number !== action.postId);\r\n\r\n                let dislikePostsArr =  [...state.posts];\r\n                for(let i = 0; i < dislikePostsArr.length; i++){\r\n                    if(dislikePostsArr[i].id === action.postId){\r\n                        dislikePostsArr[i].likesCount --;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    likedPosts: newLikedPostsArr,\r\n                    posts: dislikePostsArr\r\n                };\r\n            }\r\n            return state;\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const addPostSuccess = (newPost) => ({ type: ADD_POST, newPost});\r\nexport const deletePostSuccess = (postId) => ({ type: DELETE_POST, postId});\r\nexport const likePostSuccess = (postId) => ({ type: LIKE_POST, postId});\r\nexport const dislikePostSuccess = (postId) => ({ type: DISLIKE_POST, postId});\r\n\r\n\r\nexport const addPost = (newPost) => {\r\n    return (dispatch) => {\r\n        dispatch(addPostSuccess(newPost))\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    return (dispatch) => {\r\n        dispatch(deletePostSuccess(postId))\r\n    }\r\n}\r\n\r\nexport const likePost = (postId) => {\r\n    return (dispatch) => {\r\n        dispatch(likePostSuccess(postId))\r\n    }\r\n}\r\n\r\nexport const dislikePost = (postId) => {\r\n    return (dispatch) => {\r\n        dispatch(dislikePostSuccess(postId))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default postReducer;","import {profileAPI} from '../api/api'\r\n\r\nconst SEND_MESSAGE = 'dialogs/SEND-MESSAGE';\r\nconst SET_USER = 'dialogs/SET_USER';\r\n\r\n\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, dialogId: 2, time:1589972640000, from: 'me', messageText:'Lorem ipsum dolor sit amet.'},\r\n        {id: 2, dialogId: 2, time:1589976600000, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Corporis, veritatis.'},\r\n        {id: 3, dialogId: 2, time:1589979600000, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing.'},\r\n        {id: 4, dialogId: 2, time:1589988360000, from: 'me', messageText:'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam tempora iste voluptatum veritatis eos quo, esse qui ipsam odio! Dicta?'},\r\n        {id: 5, dialogId: 9, time:1589988720000, from: 'me', messageText:'Lorem ipsum dolor sit amet.'},\r\n        {id: 6, dialogId: 11, time:1589994180000, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Corporis, veritatis.'},\r\n        {id: 7, dialogId: 11, time:1589997480000, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing.'},\r\n        {id: 8, dialogId: 12, time:1589997840000, from: 'me', messageText:'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam tempora iste voluptatum veritatis eos quo, esse qui ipsam odio! Dicta?'},\r\n\r\n    ],\r\n    dialogs: [\r\n        {id: 1, opponentId: 2},\r\n        {id: 2, opponentId: 9},\r\n        {id: 3, opponentId: 11},\r\n        {id: 4, opponentId: 12}\r\n    ],\r\n    users: [],\r\n    maxMessages:8,\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: state.maxMessages + 1,\r\n                    dialogId: action.dialogId,\r\n                    time: action.time,\r\n                    from: 'me',\r\n                    messageText: action.newMessage,\r\n                }],\r\n                maxMessages: state.maxMessages + 1\r\n            }\r\n\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.userId]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessage = (dialogId, newMessage, time) => ({ type: SEND_MESSAGE, dialogId, newMessage, time });\r\nexport const setUser = (userId) => ({ type: SET_USER, userId });\r\n\r\n\r\nexport const getUserFromServer = (userId) => (dispatch) => {\r\n    profileAPI.getUsersProfile(userId).then((response) => {\r\n        dispatch(setUser(response));\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from './Overlay.module.sass';\r\n\r\nconst Overlay = React.memo(({onClick, ...props}) => {\r\n    return <div onClick={onClick} className={s.overlay} />\r\n})\r\n\r\nexport default Overlay;","import anime from \"animejs\";\r\n\r\nconst show = (target, cb) => {\r\n    anime({\r\n        targets: target,\r\n        keyframes: [\r\n            {opacity: 0},\r\n            {opacity: 1}\r\n        ],\r\n        duration: 300,\r\n        easing: 'linear',\r\n        loop: false,\r\n        complete: () => {\r\n            if(cb) cb()\r\n        }\r\n    });\r\n};\r\n\r\nexport default show;","import anime from \"animejs\";\r\n\r\nconst hide = (target, cb) => {\r\n    anime({\r\n        targets: target,\r\n        keyframes: [\r\n            {opacity: 1},\r\n            {opacity: 0}\r\n        ],\r\n        duration: 300,\r\n        easing: 'linear',\r\n        loop: false,\r\n        complete: () => {\r\n            if(cb) cb()\r\n        }\r\n    });\r\n};\r\n\r\nexport default hide;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(item => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE';\r\nconst SET_PAGES_COUNT = 'users/SET_PAGES_COUNT';\r\nconst SET_USERS_TOTAL_COUNT = 'users/SET-USERS-TOTAL-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    pagesCount: 0,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n\r\n        case SET_PAGES_COUNT:\r\n            return {\r\n                ...state,\r\n                pagesCount: action.pages\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            };\r\n\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId: userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId: userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users: users });\r\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, page });\r\nexport const setPagesCount = (pages) => ({ type: SET_PAGES_COUNT, pages });\r\nexport const setUsersTotalCount = (totalCount) => ({ type: SET_USERS_TOTAL_COUNT, totalCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n\r\nexport const requestUsers = (page, pageSize) =>  {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.requestUsers(page, pageSize);\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n        dispatch(setPagesCount(Math.ceil(data.totalCount / pageSize)));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, methodAPI, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n\r\n    const data = await methodAPI;\r\n\r\n    if(data.resultCode === 0){\r\n        dispatch(actionCreator);\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) =>  {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow(userId), followSuccess(userId));\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) =>  {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow(userId), unfollowSuccess(userId));\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default usersReducer;","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '321994fc-144a-4c0e-a36e-a2437572c56d'\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n\r\n    requestUsers(currentPage = 1, pageSize = 10){\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    follow(userId){\r\n        return (\r\n            instance.post(`follow/${userId}`, {})\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    unfollow(userId){\r\n        return (\r\n            instance.delete(`follow/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUsersProfile(userId){\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    getStatus(userId){\r\n        return(\r\n            instance.get(`profile/status/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    updateStatus(status){\r\n        return(\r\n            instance.put(`profile/status`, {status:status})\r\n        )\r\n    },\r\n    savePhoto(photoFile){\r\n        let formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return(\r\n            instance.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n\r\n    saveProfileInfo(profile){\r\n        return(\r\n            instance.put(`profile`, profile)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    checkAuth(){\r\n        return (\r\n            instance.get(`auth/me`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        );\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null){\r\n        return (\r\n            instance.post(`auth/login`, {email, password,rememberMe,captcha})\r\n        );\r\n    },\r\n    logout(){\r\n        return (\r\n            instance.delete(`auth/login`)\r\n        );\r\n    },\r\n};\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n        return (\r\n            instance.get(`security/get-captcha-url`)\r\n        );\r\n    },\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1OWMd\"};","module.exports = __webpack_public_path__ + \"static/media/menu.e2931d35.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3e1yK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2ztAT\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {checkAuth} from './auth-reducer'\r\n\r\nconst SET_INITIAL = 'app/SET_INITIAL';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_INITIAL:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setInitial = () => ({ type: SET_INITIAL });\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(checkAuth());\r\n    dispatch(setInitial());\r\n}\r\n\r\nexport default appReducer;","export const getInitialized = (state) => {\r\n    return state.app.initialized;\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport postsReducer from \"./posts-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    app: appReducer,\r\n    profilePage: profileReducer,\r\n    postsPage: postsReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React, {useEffect, useRef} from 'react';\r\nimport s from './MobileMenu.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Overlay from \"../../common/Overlay/Overlay\";\r\nimport show from '../../../utils/animations/show';\r\nimport hide from '../../../utils/animations/hide';\r\n\r\n\r\nconst MobileMenu = React.memo( ({closeMobileMenu, ...props}) => {\r\n\r\n\r\n    const mobileMenu = useRef(null);\r\n\r\n    useEffect(() => {\r\n        show(mobileMenu.current)\r\n    })\r\n\r\n    const onCloseMobileMenu = async() => {\r\n        hide(mobileMenu.current, closeMobileMenu)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div ref={mobileMenu} onClick={onCloseMobileMenu} className={s.mobileMenuContainer}>\r\n            <Overlay  />\r\n            <nav className={s.mobileMenu}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n            </nav>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n});\r\n\r\nexport default MobileMenu;","import React, {useState} from 'react';\r\nimport s from './Header.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport cn from 'classnames'\r\nimport menuImg from '../../assets/images/menu.svg'\r\nimport MobileMenu from \"./MobileMenu/MobileMenu\";\r\n\r\n\r\nconst Header = React.memo( ({login, isAuth, logout, ...props}) => {\r\n\r\n\r\n    let [isOpenMobileMenu, setIsOpenMobileMenu] = useState(false)\r\n\r\n\r\n    const openMobileMenu = () => {\r\n        setIsOpenMobileMenu(true)\r\n    }\r\n\r\n    const closeMobileMenu = () => {\r\n        setIsOpenMobileMenu(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <header className={`${s.header}`}>\r\n                <div className={cn('width-wrapper', s.container)}>\r\n                    <a href='/' className={`${s.logo}`}>\r\n                        <span>AI</span>\r\n                    </a>\r\n                    <div className={s.menuController} onClick={openMobileMenu} >\r\n                        <img src={menuImg} alt=\"menu controller\"/>\r\n                    </div>\r\n                    <div className={s.loginBlock}>\r\n                        {isAuth === true &&\r\n                        <div>\r\n                            <span onClick={logout} className={cn('button','button-normal', s.userLogin)}>Logout</span>\r\n                            <NavLink to={'/profile'} className={cn('button','button-success',)}>{login}</NavLink>\r\n                        </div>\r\n                        }\r\n                        {isAuth === false &&\r\n                        <NavLink className={cn('button','button-success')} to={'/login'}>Login</NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            {isOpenMobileMenu &&\r\n                <MobileMenu closeMobileMenu={closeMobileMenu} />\r\n            }\r\n\r\n\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header'\r\nimport {logout} from '../../redux/auth-reducer'\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth, getLogin} from \"../../redux/auth-selectors\";\r\n\r\nclass HeaderComponent extends React.PureComponent {\r\n\r\n    render() {\r\n        const {isAuth, login, logout} = this.props;\r\n        return (\r\n            <Header\r\n                isAuth={isAuth}\r\n                login={login}\r\n                logout={logout}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getLogin(state),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderComponent);","import React from 'react';\r\nimport s from './Navbar.module.sass';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Navbar = React.memo( (props) => {\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.navbar}>\r\n                <nav>\r\n                    <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n                    <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n                    <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n                    {/*<NavLink to='/news' activeClassName={s.active}>News</NavLink>*/}\r\n                    {/*<NavLink to='/music' activeClassName={s.active}>Music</NavLink>*/}\r\n                    {/*<NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>*/}\r\n                </nav>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Footer.module.sass'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={s.footer}>\r\n\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer","import React, {Suspense} from 'react';\nimport './App.sass';\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {getInitialized} from \"./redux/app-selectors\";\nimport store from \"./redux/redux-store\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Navbar from './components/Navbar/Navbar';\nimport Footer from './components/Footer/Footer';\n\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst LoginContainer = React.lazy(() => import('./components/Login/LoginContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\nconst ErrorContent = React.lazy(() => import('./components/ErrorContent/ErrorContent'));\n\n\nclass App extends React.Component {\n\n    catchAllUnhandledErrors = (reason, promise) => {\n        console.log('Some error occured');\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n\n\n        // app\n        //    - header\n        //    - main\n        //       - width-wrapper\n        //          - content-wrapper\n        //             - navbar\n        //             - content\n        //    - footer\n\n\n        return (\n\n            <div className='app'>\n\n                <HeaderContainer/>\n\n                <div className=\"main\">\n                    <div className=\"width-wrapper\" >\n                        <div className=\"content-wrapper\">\n\n                            <Navbar/>\n\n                            <div className=\"content\">\n                                <Suspense fallback={<Preloader/>}>\n\n                                    <Switch>\n\n                                        <Route path='/dialogs/:userId?'\n                                               render={() => <DialogsContainer/>}/>\n\n                                        <Route path='/profile/:userId?'\n                                               render={() => <ProfileContainer/>}/>\n\n                                        <Route path='/users'\n                                               render={() => <UsersContainer/>}/>\n\n                                        <Route path='/login'\n                                               render={() => <LoginContainer/>}/>\n\n                                        <Route path='/news'\n                                               render={() => <News/>}/>\n\n                                        <Route path='/music'\n                                               render={() => <Music/>}/>\n\n                                        <Route path='/settings'\n                                               render={() => <Settings/>}/>\n\n                                        <Route exact path='/'> <Redirect to='/profile'/> </Route>\n\n                                        <Route path='*'\n                                               render={() => <ErrorContent\n                                                   errorType={404}\n                                                   h1={'Page not found'}\n                                                   h2={'Sorry, we have lost this page, but... our best detectives are already looking for it!'}\n                                                   linkUrl={'/users'}\n                                                   linkText={'Get another try'}\n                                                   />}\n                                        />\n\n                                    </Switch>\n\n                                </Suspense>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n\n                <Footer />\n\n            </div>\n\n\n        );\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    initialized: getInitialized(state)\n})\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App)\n\nconst SamuraiJSApp = (props) => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    );\n};\n\nexport default SamuraiJSApp;\n\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}