{"version":3,"sources":["components/Navbar/Navbar.module.sass","serviceWorker.js","redux/app-reducer.js","redux/app-selectors.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","App.jsx","index.js","redux/auth-reducer.js","components/Header/Header.module.sass","components/common/Preloader/Preloader.jsx","redux/auth-selectors.js","redux/profile-reducer.js","redux/dialogs-reducer.js","assets/images/fox.png","utils/object-helpers.js","redux/users-reducer.js","components/common/Preloader/Preloader.module.sass","assets/images/loader.svg","api/api.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","initialized","appReducer","state","action","type","getInitialized","app","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","React","memo","login","isAuth","logout","className","s","header","href","logo","src","foxImg","alt","loginBlock","onClick","button","to","HeaderComponent","this","props","PureComponent","connect","getIsAuth","getLogin","Navbar","navbar","activeClassName","active","ProfileContainer","lazy","DialogsContainer","UsersContainer","LoginContainer","News","Music","Settings","App","initializeApp","HeaderContainer","fallback","Preloader","path","render","exact","Component","AppContainer","withRouter","dispatch","a","checkAuth","SamuraiJSApp","basename","process","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","userId","email","setAuthUserData","payload","authAPI","response","resultCode","data","id","password","rememberMe","messages","length","stopSubmit","_error","preloader","img","getUserId","ADD_POST","posts","likesCount","text","profile","status","addPost","newPost","setUserProfile","setUserStatus","getUserProfile","profileAPI","getUsersProfile","responseForGetUsers","getStatus","responseForGetStatus","getUserStatus","updateUserStatus","updateStatus","from","messageText","dialogs","name","sendMessageActionCreator","newMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","FOLLOW","users","pageSize","totalUsersCount","currentPage","pagesCount","isFetching","followingInProgress","setCurrentPage","page","toggleIsFetching","toggleFollowingProgress","requestUsers","usersAPI","totalCount","pages","Math","ceil","followUnfollowFlow","methodAPI","actionCreator","follow","followSuccess","unfollow","unfollowSuccess","followed","filter","instance","axios","withCredentials","baseURL","headers","get","post","delete","put"],"mappings":"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","file":"static/js/main.f61e1429.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__30h2V\",\"active\":\"Navbar_active__3RDi9\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {checkAuth} from './auth-reducer'\r\n\r\nconst SET_INITIAL = 'app/SET_INITIAL';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_INITIAL:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setInitial = () => ({ type: SET_INITIAL });\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(checkAuth());\r\n    dispatch(setInitial());\r\n}\r\n\r\nexport default appReducer;","export const getInitialized = (state) => {\r\n    return state.app.initialized;\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    app: appReducer,\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport foxImg from '../../assets/images/fox.png'\r\n\r\nconst Header = React.memo( ({login, isAuth, logout, ...props}) => {\r\n\r\n    return (\r\n\r\n        <header className={`${s.header}`}>\r\n            <a href='/' className={`${s.logo}`}><img src={foxImg} alt='logo' /></a>\r\n            <div className={s.loginBlock}>\r\n                {isAuth === true ? <div>{login}<span onClick={logout} className={s.button}>Logout</span></div> : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n\r\n    );\r\n});\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header'\r\nimport {logout} from '../../redux/auth-reducer'\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth, getLogin} from \"../../redux/auth-selectors\";\r\n\r\nclass HeaderComponent extends React.PureComponent {\r\n\r\n    render() {\r\n        const {isAuth, login, logout} = this.props;\r\n        return (\r\n            <Header\r\n                isAuth={isAuth}\r\n                login={login}\r\n                logout={logout}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getLogin(state),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderComponent);","import React from 'react';\r\nimport s from './Navbar.module.sass';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = React.memo( (props) => {\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n            <nav>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n                <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n            </nav>\r\n\r\n\r\n            {/*<Friends state={props.state.friends} />*/}\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Navbar;","import React, {Suspense} from 'react';\nimport './App.sass';\nimport {BrowserRouter, HashRouter, Route, withRouter} from 'react-router-dom';\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {getInitialized} from \"./redux/app-selectors\";\nimport store from \"./redux/redux-store\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Navbar from './components/Navbar/Navbar';\n\n// import ProfileContainer from './components/Profile/ProfileContainer';\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\n// import UsersContainer from './components/Users/UsersContainer';\n// import LoginContainer from \"./components/Login/LoginContainer\";\n// import News from './components/News/News';\n// import Music from './components/Music/Music';\n// import Settings from './components/Settings/Settings';\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst LoginContainer = React.lazy(() => import('./components/Login/LoginContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\n\n\nclass App extends React.Component {\n\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n\n    render(){\n        if(!this.props.initialized){\n            return <Preloader />\n        }\n\n\n        return (\n\n            <div className='app-wrapper'>\n                <HeaderContainer />\n                <Navbar />\n\n                <div className=\"app-wrapper-content\">\n\n                    <Suspense fallback={<Preloader/>}>\n\n                        <Route path='/dialogs'\n                               render={() => <DialogsContainer />}/>\n\n                        <Route path='/profile/:userId?'\n                            render={() => <ProfileContainer />}/>\n\n                        <Route exact path='/users'\n                               render={() => <UsersContainer /> }/>\n\n                        <Route exact path='/login'\n                               render={() => <LoginContainer />} />\n\n                        <Route exact path='/news'\n                               render={() => <News />} />\n\n                        <Route exact path='/music'\n                               render={() => <Music />} />\n\n                        <Route exact path='/settings'\n                               render={() => <Settings />} />\n\n                    </Suspense>\n\n                </div>\n\n            </div>\n\n\n        );\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    initialized: getInitialized(state)\n})\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps,{initializeApp})\n)(App)\n\nconst SamuraiJSApp = (props) => {\n    return (\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n    );\n};\n\nexport default SamuraiJSApp;\n\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <SamuraiJSApp />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'auth/SET_AUTH_USER_DATA';\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_AUTH_USER_DATA, payload: {userId, email, login, isAuth} });\r\n\r\nexport const checkAuth = () => async (dispatch) => {\r\n    const response = await authAPI.checkAuth()\r\n\r\n    if(response.resultCode === 0){\r\n        const {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe)\r\n\r\n    if(response.data.resultCode === 0){\r\n        dispatch(checkAuth());\r\n    }else{\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Common error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__IwUb1\",\"logo\":\"Header_logo__mbnhI\",\"loginBlock\":\"Header_loginBlock__2518E\",\"button\":\"Header_button__tZAyb\"};","import React from 'react';\r\nimport s from './Preloader.module.sass'\r\nimport img from '../../../assets/images/loader.svg'\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={img} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","export const getUserId = (state) => {\r\n    return state.auth.userId;\r\n}\r\n\r\nexport const getEmail = (state) => {\r\n    return state.auth.email;\r\n}\r\n\r\nexport const getLogin = (state) => {\r\n    return state.auth.login;\r\n}\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}","import {profileAPI} from \"../api/api\";\r\n\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile/SET_USER_STATUS';\r\n\r\n\r\nlet initialState = {\r\n    posts:[\r\n        {id: 1, likesCount: 1, text: 'Lorem ipsum dolor sit.'},\r\n        {id: 2, likesCount: 5, text: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, quisquam!'},\r\n        {id: 3, likesCount: 2, text: 'Lorem ipsum dolor sit amet'},\r\n        {id: 4, likesCount: 40, text: 'Jetxc jjsd ddffddf'},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5,text: action.newPost,likesCount: 0}]\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const addPost = (newPost) => ({ type: ADD_POST, newPost});\r\nexport const setUserProfile = (profile) =>({ type: SET_USER_PROFILE,  profile});\r\nexport const setUserStatus = (status) =>({ type: SET_USER_STATUS,  status});\r\n\r\nexport const getUserProfile = (userId) =>  {\r\n    return async (dispatch) => {\r\n        dispatch(setUserProfile(null));\r\n\r\n        const responseForGetUsers = await profileAPI.getUsersProfile(userId);\r\n        dispatch(setUserProfile(responseForGetUsers));\r\n\r\n        const responseForGetStatus = await profileAPI.getStatus(userId)\r\n        dispatch(setUserStatus(responseForGetStatus));\r\n    }\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    dispatch(setUserStatus(''));\r\n\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setUserStatus(response));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setUserStatus(status));\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'dialogs/SEND-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, from: 'me', messageText:'Lorem ipsum dolor sit amet.'},\r\n        {id: 2, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Corporis, veritatis.'},\r\n        {id: 3, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing.'},\r\n        {id: 4, from: 'me', messageText:'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam tempora iste voluptatum veritatis eos quo, esse qui ipsam odio! Dicta?'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Loe'},\r\n        {id: 2, name: 'Joe'},\r\n        {id: 3, name: 'Carlos'},\r\n        {id: 4, name: 'Jeniffer'}\r\n    ]\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: 5,\r\n                    messageText: action.newMessage,\r\n                    from: 'me'\r\n                }],\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageActionCreator = (newMessage) => ({ type: SEND_MESSAGE, newMessage });\r\n\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/fox.cd7aa46c.png\";","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(item => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE';\r\nconst SET_PAGES_COUNT = 'users/SET_PAGES_COUNT';\r\nconst SET_USERS_TOTAL_COUNT = 'users/SET-USERS-TOTAL-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    pagesCount: 0,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n\r\n        case SET_PAGES_COUNT:\r\n            return {\r\n                ...state,\r\n                pagesCount: action.pages\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            };\r\n\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId: userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId: userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users: users });\r\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, page });\r\nexport const setPagesCount = (pages) => ({ type: SET_PAGES_COUNT, pages });\r\nexport const setUsersTotalCount = (totalCount) => ({ type: SET_USERS_TOTAL_COUNT, totalCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n\r\nexport const requestUsers = (page, pageSize) =>  {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.requestUsers(page, pageSize);\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n        dispatch(setPagesCount(Math.ceil(data.totalCount / pageSize)));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, methodAPI, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n\r\n    const data = await methodAPI;\r\n\r\n    if(data.resultCode === 0){\r\n        dispatch(actionCreator);\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) =>  {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow(userId), followSuccess(userId));\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) =>  {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow(userId), unfollowSuccess(userId));\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1OWMd\"};","module.exports = __webpack_public_path__ + \"static/media/loader.9205748d.svg\";","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '321994fc-144a-4c0e-a36e-a2437572c56d'\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n\r\n    requestUsers(currentPage = 1, pageSize = 10){\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    follow(userId){\r\n        return (\r\n            instance.post(`follow/${userId}`, {})\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    unfollow(userId){\r\n        return (\r\n            instance.delete(`follow/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUsersProfile(userId){\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    getStatus(userId){\r\n        return(\r\n            instance.get(`profile/status/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    updateStatus(status){\r\n            return(\r\n                instance.put(`profile/status`, {status:status})\r\n            )\r\n        }\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    checkAuth(){\r\n        return (\r\n            instance.get(`auth/me`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        );\r\n    },\r\n    login(email, password,rememberMe=false){\r\n        return (\r\n            instance.post(`auth/login`, {email, password,rememberMe})\r\n        );\r\n    },\r\n    logout(){\r\n        return (\r\n            instance.delete(`auth/login`)\r\n        );\r\n    },\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}