{"version":3,"sources":["serviceWorker.js","redux/app-reducer.js","redux/app-selectors.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","App.jsx","index.js","redux/auth-reducer.js","components/Header/Header.module.sass","components/Navbar/Navbar.module.sass","components/common/Preloader/Preloader.jsx","redux/auth-selectors.js","assets/images/loader.svg","api/api.js","redux/profile-reducer.js","redux/posts-reducer.js","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Preloader/Preloader.module.sass","components/Footer/Footer.module.sass"],"names":["Boolean","window","location","hostname","match","initialState","initialized","appReducer","state","action","type","getInitialized","app","reducers","combineReducers","profilePage","profileReducer","postsPage","postsReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","React","memo","login","isAuth","logout","className","s","header","cn","container","href","logo","loginBlock","onClick","userLogin","to","HeaderComponent","this","props","PureComponent","connect","getIsAuth","getLogin","Navbar","navbar","activeClassName","active","Footer","footer","ProfileContainer","lazy","DialogsContainer","UsersContainer","LoginContainer","News","Music","Settings","ErrorContent","App","catchAllUnhandledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","HeaderContainer","fallback","Preloader","path","render","exact","errorType","h1","h2","linkUrl","linkText","Component","AppContainer","withRouter","dispatch","a","checkAuth","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","userId","email","captchaUrl","isLoading","setAuthUserData","payload","setIsLoading","status","authAPI","response","resultCode","data","id","password","rememberMe","captcha","Promise","resolve","getCaptchaUrl","messages","length","reject","securityAPI","url","module","exports","preloader","src","img","alt","getUserId","getIsLoading","instance","axios","withCredentials","baseURL","headers","usersAPI","requestUsers","currentPage","pageSize","get","follow","post","unfollow","delete","profileAPI","getUsersProfile","getStatus","updateStatus","put","savePhoto","photoFile","formData","FormData","append","saveProfileInfo","profile","isLoadingAvatar","isLoadingProfileInfoChanges","isLoadingStatus","setUserProfile","setUserStatus","setIsLoadingStatus","setIsLoadingProfileInfoChanges","setIsLoadingAvatar","getUserProfile","getUserStatus","undefined","updateUserStatus","file","photos","getState","posts","likesCount","text","maxPostId","likedPosts","addPost","newPost","addPostSuccess","deletePost","postId","deletePostSuccess","likePost","likePostSuccess","dislikePost","dislikePostSuccess","postReducer","deletePostArr","i","splice","isPostLiked","some","number","newLikedPostsArr","push","likePostsArr","isPostLiked2","filter","dislikePostsArr","from","messageText","dialogs","name","sendMessageActionCreator","newMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","FOLLOW","users","totalUsersCount","pagesCount","isFetching","followingInProgress","setCurrentPage","page","toggleIsFetching","toggleFollowingProgress","totalCount","pages","Math","ceil","followUnfollowFlow","methodAPI","actionCreator","followSuccess","unfollowSuccess","followed"],"mappings":"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","file":"static/js/main.928d76e2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {checkAuth} from './auth-reducer'\r\n\r\nconst SET_INITIAL = 'app/SET_INITIAL';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_INITIAL:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setInitial = () => ({ type: SET_INITIAL });\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(checkAuth());\r\n    dispatch(setInitial());\r\n}\r\n\r\nexport default appReducer;","export const getInitialized = (state) => {\r\n    return state.app.initialized;\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport postsReducer from \"./posts-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    app: appReducer,\r\n    profilePage: profileReducer,\r\n    postsPage: postsReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport cn from 'classnames'\r\n\r\nconst Header = React.memo( ({login, isAuth, logout, ...props}) => {\r\n\r\n    return (\r\n\r\n        <header className={`${s.header}`}>\r\n            <div className={cn('app-wrapper-width', s.container)}>\r\n                <a href='/' className={`${s.logo}`}>\r\n                    <span>AI</span>\r\n                </a>\r\n                <div className={s.loginBlock}>\r\n                    {isAuth === true &&\r\n                        <div>\r\n                            <span onClick={logout} className={cn('button','button-normal', s.userLogin)}>Logout</span>\r\n                            <NavLink to={'/profile'} className={cn('button','button-success',)}>{login}</NavLink>\r\n                        </div>\r\n                    }\r\n                    {isAuth === false &&\r\n                        <NavLink className={cn('button','button-success')} to={'/login'}>Login</NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n\r\n    );\r\n});\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header'\r\nimport {logout} from '../../redux/auth-reducer'\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth, getLogin} from \"../../redux/auth-selectors\";\r\n\r\nclass HeaderComponent extends React.PureComponent {\r\n\r\n    render() {\r\n        const {isAuth, login, logout} = this.props;\r\n        return (\r\n            <Header\r\n                isAuth={isAuth}\r\n                login={login}\r\n                logout={logout}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getLogin(state),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderComponent);","import React from 'react';\r\nimport s from './Navbar.module.sass';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Navbar = React.memo( (props) => {\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.navbar}>\r\n                <nav>\r\n                    <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n                    <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n                    <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n                    {/*<NavLink to='/news' activeClassName={s.active}>News</NavLink>*/}\r\n                    {/*<NavLink to='/music' activeClassName={s.active}>Music</NavLink>*/}\r\n                    {/*<NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>*/}\r\n                </nav>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Footer.module.sass'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={s.footer}>\r\n\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer","import React, {Suspense} from 'react';\nimport './App.sass';\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {getInitialized} from \"./redux/app-selectors\";\nimport store from \"./redux/redux-store\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Navbar from './components/Navbar/Navbar';\nimport Footer from './components/Footer/Footer';\n\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst LoginContainer = React.lazy(() => import('./components/Login/LoginContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\nconst ErrorContent = React.lazy(() => import('./components/ErrorContent/ErrorContent'));\n\n\nclass App extends React.Component {\n\n    catchAllUnhandledErrors = (reason, promise) => {\n        alert('Some error occured');\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n\n        return (\n\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n\n\n                <div className=\"app-wrapper-width\" >\n                    <div className=\"app-wrapper-content\">\n\n                        <Navbar/>\n                        <div className=\"content-container\">\n                            <Suspense fallback={<Preloader/>}>\n\n                                <Switch>\n\n                                    <Route path='/dialogs'\n                                           render={() => <DialogsContainer/>}/>\n\n                                    <Route path='/profile/:userId?'\n                                           render={() => <ProfileContainer/>}/>\n\n                                    <Route path='/users'\n                                           render={() => <UsersContainer/>}/>\n\n                                    <Route path='/login'\n                                           render={() => <LoginContainer/>}/>\n\n                                    <Route path='/news'\n                                           render={() => <News/>}/>\n\n                                    <Route path='/music'\n                                           render={() => <Music/>}/>\n\n                                    <Route path='/settings'\n                                           render={() => <Settings/>}/>\n\n                                    <Route exact path='/'> <Redirect to='/profile'/> </Route>\n\n                                    <Route path='*'\n                                           render={() => <ErrorContent\n                                               errorType={404}\n                                               h1={'Page not found'}\n                                               h2={'Sorry, we have lost this page, but... our best detectives are already looking for it!'}\n                                               linkUrl={'/users'}\n                                               linkText={'Get another try'}\n                                               />}\n                                    />\n\n                                </Switch>\n\n                            </Suspense>\n                        </div>\n\n                    </div>\n                </div>\n\n                <Footer />\n\n            </div>\n\n\n        );\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    initialized: getInitialized(state)\n})\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App)\n\nconst SamuraiJSApp = (props) => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    );\n};\n\nexport default SamuraiJSApp;\n\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n// import Test from './Test'\n\n\n\nReactDOM.render(\n    // <React.StrictMode>\n        <App />,\n    //     <Test />,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI, securityAPI} from \"../api/api\";\r\n\r\n\r\nconst SET_AUTH_USER_DATA = 'auth/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL = 'auth/GET_CAPTCHA_URL';\r\nconst DELETE_CAPTCHA = 'auth/DELETE_CAPTCHA';\r\nconst SET_IS_LOADING = 'auth/SET_IS_LOADING';\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n    isLoading: false\r\n};\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        case DELETE_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                captchaUrl: null\r\n            };\r\n\r\n        case SET_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.status\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_AUTH_USER_DATA, payload: {userId, email, login, isAuth} });\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({ type: GET_CAPTCHA_URL, payload: {captchaUrl} });\r\nexport const deleteCaptcha = () => ({ type: DELETE_CAPTCHA });\r\nexport const setIsLoading = (status) => ({ type: SET_IS_LOADING, status });\r\n\r\nexport const checkAuth = () => async (dispatch) => {\r\n    const response = await authAPI.checkAuth()\r\n\r\n    if(response.resultCode === 0){\r\n        const {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    dispatch(setIsLoading(true));\r\n\r\n    const response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n    if(response.data.resultCode === 0){\r\n        await dispatch(checkAuth());\r\n        dispatch(deleteCaptcha());\r\n        dispatch(setIsLoading(false));\r\n        return Promise.resolve(null);\r\n    }else{\r\n        if (response.data.resultCode === 10){\r\n            await dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Server error. Please, try later';\r\n        dispatch(setIsLoading(false));\r\n        return Promise.reject(message);\r\n    }\r\n\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captcha = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captcha));\r\n\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__IwUb1\",\"container\":\"Header_container__3GB8E\",\"logo\":\"Header_logo__mbnhI\",\"loginBlock\":\"Header_loginBlock__2518E\",\"userLogin\":\"Header_userLogin__1ZD75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__30h2V\",\"active\":\"Navbar_active__3RDi9\"};","import React from 'react';\r\nimport s from './Preloader.module.sass'\r\nimport img from '../../../assets/images/loader.svg'\r\n\r\nlet Preloader = () => {\r\n\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={img} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","export const getUserId = (state) => {\r\n    return state.auth.userId;\r\n}\r\n\r\nexport const getEmail = (state) => {\r\n    return state.auth.email;\r\n}\r\n\r\nexport const getLogin = (state) => {\r\n    return state.auth.login;\r\n}\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const getCaptchaUrl = (state) => {\r\n    return state.auth.captchaUrl;\r\n}\r\nexport const getIsLoading = (state) => {\r\n    return state.auth.isLoading;\r\n}","module.exports = __webpack_public_path__ + \"static/media/loader.9205748d.svg\";","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '321994fc-144a-4c0e-a36e-a2437572c56d'\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n\r\n    requestUsers(currentPage = 1, pageSize = 10){\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    follow(userId){\r\n        return (\r\n            instance.post(`follow/${userId}`, {})\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    unfollow(userId){\r\n        return (\r\n            instance.delete(`follow/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUsersProfile(userId){\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    getStatus(userId){\r\n        return(\r\n            instance.get(`profile/status/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    updateStatus(status){\r\n        return(\r\n            instance.put(`profile/status`, {status:status})\r\n        )\r\n    },\r\n    savePhoto(photoFile){\r\n        let formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return(\r\n            instance.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n\r\n    saveProfileInfo(profile){\r\n        return(\r\n            instance.put(`profile`, profile)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    checkAuth(){\r\n        return (\r\n            instance.get(`auth/me`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        );\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null){\r\n        return (\r\n            instance.post(`auth/login`, {email, password,rememberMe,captcha})\r\n        );\r\n    },\r\n    logout(){\r\n        return (\r\n            instance.delete(`auth/login`)\r\n        );\r\n    },\r\n};\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n        return (\r\n            instance.get(`security/get-captcha-url`)\r\n        );\r\n    },\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {profileAPI} from \"../api/api\";\r\n\r\n\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile/SET_USER_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS';\r\nconst SET_IS_LOADING_STATUS = 'profile/SET_IS_LOADING_STATUS';\r\nconst SET_IS_LOADING_AVATAR = 'profile/SET_IS_LOADING_AVATAR';\r\nconst SET_IS_LOADING_PROFILE_INFO_CHANGES = 'profile/SET_IS_LOADING_PROFILE_INFO_CHANGES';\r\n\r\n\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    isLoadingAvatar: false,\r\n    isLoadingProfileInfoChanges: false,\r\n    status: '',\r\n    isLoadingStatus: false,\r\n\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            };\r\n\r\n        case SET_IS_LOADING_STATUS:\r\n            return {\r\n                ...state,\r\n                isLoadingStatus: action.status\r\n            };\r\n\r\n        case SET_IS_LOADING_PROFILE_INFO_CHANGES:\r\n            return {\r\n                ...state,\r\n                isLoadingProfileInfoChanges: action.status\r\n            };\r\n\r\n        case SET_IS_LOADING_AVATAR:\r\n            return {\r\n                ...state,\r\n                isLoadingAvatar: action.status\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) =>({ type: SET_USER_PROFILE,  profile});\r\nexport const setUserStatus = (status) =>({ type: SET_USER_STATUS,  status});\r\nexport const savePhotoSuccess = (photos) =>({ type: SAVE_PHOTO_SUCCESS,  photos});\r\nexport const setIsLoadingStatus = (status) =>({ type: SET_IS_LOADING_STATUS,  status});\r\nexport const setIsLoadingProfileInfoChanges = (status) =>({ type: SET_IS_LOADING_PROFILE_INFO_CHANGES,  status});\r\nexport const setIsLoadingAvatar = (status) =>({ type: SET_IS_LOADING_AVATAR,  status});\r\n\r\n\r\n\r\nexport const getUserProfile = (userId) =>  {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(setUserProfile(null));\r\n\r\n        if(userId){\r\n\r\n            await profileAPI.getUsersProfile(userId)\r\n                .then(async (response) => {\r\n                    dispatch(setUserProfile(response));\r\n                    dispatch(getUserStatus(userId));\r\n                    return Promise.resolve(null);\r\n                })\r\n                .catch((error) => {\r\n                    dispatch(setUserProfile(undefined));\r\n                    // return Promise.reject(error)\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n\r\n    dispatch(setUserStatus(''));\r\n\r\n    if(userId){\r\n        try{\r\n            const response = await profileAPI.getStatus(userId);\r\n            dispatch(setUserStatus(response));\r\n        }catch(error){\r\n            return Promise.reject('No such user or server error');\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    dispatch(setIsLoadingStatus(true));\r\n\r\n    const response = await profileAPI.updateStatus(status);\r\n    dispatch(setIsLoadingStatus(false));\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setUserStatus(status));\r\n        return Promise.resolve(null);\r\n    }else{\r\n        if(response.data){\r\n            return Promise.reject(response.data.messages[0]);\r\n        }else{\r\n            return Promise.reject('Server error');\r\n        }\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n\r\n    dispatch(setIsLoadingAvatar(true));\r\n    const response = await profileAPI.savePhoto(file);\r\n    dispatch(setIsLoadingAvatar(false));\r\n\r\n    if(response.data.resultCode === 0){\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n        return Promise.resolve(null);\r\n    }else{\r\n        if(response.data){\r\n            return Promise.reject(response.data.messages[0]);\r\n        }else{\r\n            return Promise.reject('Server error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const saveProfileInfo = (profile) => async (dispatch, getState) => {\r\n    dispatch(setIsLoadingProfileInfoChanges(true));\r\n    const userId = await getState().auth.userId;\r\n    const response = await profileAPI.saveProfileInfo(profile);\r\n    dispatch(setIsLoadingProfileInfoChanges(false));\r\n\r\n    if(response.data.resultCode === 0){\r\n        dispatch(getUserProfile(userId));\r\n        return Promise.resolve(null);\r\n    }else{\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default profileReducer;","const ADD_POST = 'posts/ADD-POST';\r\nconst DELETE_POST = 'posts/DELETE_POST';\r\nconst LIKE_POST = 'posts/LIKE_POST';\r\nconst DISLIKE_POST = 'posts/DISLIKE_POST';\r\n\r\n\r\n\r\nlet initialState = {\r\n    posts:[\r\n        {id: 1, likesCount: 1, text: 'OOP Typically depends on shared state. Objects and behaviors are typically tacked together on the same entity, which may be accessed at random by any number of functions with non-deterministic order, which may lead to undesirable behavior such as race conditions.'},\r\n        {id: 2, likesCount: 5, text: 'It’s easy to understand the basic concept of objects and easy to interpret the meaning of method calls. OOP tends to use an imperative style rather than a declarative style, which reads like a straight-forward set of instructions for the computer to follow.'},\r\n        {id: 3, likesCount: 2, text: 'Using the functional paradigm, programmers avoid any shared state or side-effects, which eliminates bugs caused by multiple functions competing for the same resources. With features such as the availability of point-free style (aka tacit programming), functions tend to be radically simplified and easily recomposed for more generally reusable code compared to OOP.'},\r\n        {id: 4, likesCount: 40, text: 'Over exploitation of FP features such as point-free style and large compositions can potentially reduce readability because the resulting code is often more abstractly specified, more terse, and less concrete.\\n\\n' +\r\n                'More people are familiar with OO and imperative programming than functional programming, so even common idioms in functional programming can be confusing to new team members.'},\r\n    ],\r\n    maxPostId:4,\r\n    likedPosts: [1,4],\r\n};\r\n\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: state.maxPostId+1, text: action.newPost,likesCount: 0}],\r\n                maxPostId: state.maxPostId+1\r\n            };\r\n\r\n\r\n        case DELETE_POST:\r\n            let deletePostArr = [...state.posts];\r\n            for(let i = 0; i < deletePostArr.length; i++){\r\n                if(deletePostArr[i].id === action.postId){\r\n                    deletePostArr.splice(i, 1);\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: deletePostArr\r\n            };\r\n\r\n\r\n        case LIKE_POST:\r\n            let isPostLiked = state.likedPosts.some((number) => number === action.postId)\r\n            if(!isPostLiked){\r\n\r\n                let newLikedPostsArr = state.likedPosts;\r\n                newLikedPostsArr.push(action.postId);\r\n\r\n                let likePostsArr =  [...state.posts];\r\n                for(let i = 0; i < likePostsArr.length; i++){\r\n                    if(likePostsArr[i].id === action.postId){\r\n                        likePostsArr[i].likesCount ++;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    likedPosts: newLikedPostsArr,\r\n                    posts: likePostsArr\r\n                };\r\n            }\r\n            return state;\r\n\r\n\r\n        case DISLIKE_POST:\r\n            let isPostLiked2 = state.likedPosts.some((number) => number === action.postId)\r\n            if(isPostLiked2){\r\n                let newLikedPostsArr = state.likedPosts.filter((number) => number !== action.postId);\r\n\r\n                let dislikePostsArr =  [...state.posts];\r\n                for(let i = 0; i < dislikePostsArr.length; i++){\r\n                    if(dislikePostsArr[i].id === action.postId){\r\n                        dislikePostsArr[i].likesCount --;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    likedPosts: newLikedPostsArr,\r\n                    posts: dislikePostsArr\r\n                };\r\n            }\r\n            return state;\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const addPostSuccess = (newPost) => ({ type: ADD_POST, newPost});\r\nexport const deletePostSuccess = (postId) => ({ type: DELETE_POST, postId});\r\nexport const likePostSuccess = (postId) => ({ type: LIKE_POST, postId});\r\nexport const dislikePostSuccess = (postId) => ({ type: DISLIKE_POST, postId});\r\n\r\n\r\nexport const addPost = (newPost) => {\r\n    return (dispatch) => {\r\n        dispatch(addPostSuccess(newPost))\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    return (dispatch) => {\r\n        dispatch(deletePostSuccess(postId))\r\n    }\r\n}\r\n\r\nexport const likePost = (postId) => {\r\n    return (dispatch) => {\r\n        dispatch(likePostSuccess(postId))\r\n    }\r\n}\r\n\r\nexport const dislikePost = (postId) => {\r\n    return (dispatch) => {\r\n        dispatch(dislikePostSuccess(postId))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default postReducer;","const SEND_MESSAGE = 'dialogs/SEND-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, from: 'me', messageText:'Lorem ipsum dolor sit amet.'},\r\n        {id: 2, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Corporis, veritatis.'},\r\n        {id: 3, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing.'},\r\n        {id: 4, from: 'me', messageText:'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam tempora iste voluptatum veritatis eos quo, esse qui ipsam odio! Dicta?'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Loe'},\r\n        {id: 2, name: 'Joe'},\r\n        {id: 3, name: 'Carlos'},\r\n        {id: 4, name: 'Jeniffer'}\r\n    ]\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: 5,\r\n                    messageText: action.newMessage,\r\n                    from: 'me'\r\n                }],\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageActionCreator = (newMessage) => ({ type: SEND_MESSAGE, newMessage });\r\n\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(item => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE';\r\nconst SET_PAGES_COUNT = 'users/SET_PAGES_COUNT';\r\nconst SET_USERS_TOTAL_COUNT = 'users/SET-USERS-TOTAL-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    pagesCount: 0,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n\r\n        case SET_PAGES_COUNT:\r\n            return {\r\n                ...state,\r\n                pagesCount: action.pages\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            };\r\n\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId: userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId: userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users: users });\r\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, page });\r\nexport const setPagesCount = (pages) => ({ type: SET_PAGES_COUNT, pages });\r\nexport const setUsersTotalCount = (totalCount) => ({ type: SET_USERS_TOTAL_COUNT, totalCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n\r\nexport const requestUsers = (page, pageSize) =>  {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.requestUsers(page, pageSize);\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n        dispatch(setPagesCount(Math.ceil(data.totalCount / pageSize)));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, methodAPI, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n\r\n    const data = await methodAPI;\r\n\r\n    if(data.resultCode === 0){\r\n        dispatch(actionCreator);\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) =>  {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow(userId), followSuccess(userId));\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) =>  {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow(userId), unfollowSuccess(userId));\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1OWMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2ztAT\"};"],"sourceRoot":""}