{"version":3,"sources":["api/api.ts","api/profile-api.ts","components/Header/Header.module.sass","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","utils/animations/hide.ts","components/Header/MobileMenu/MobileMenu.module.sass","components/Navbar/Navbar.module.sass","components/common/Modal/Modal.module.sass","assets/images/loader.svg","components/common/Overlay/Overlay.tsx","utils/animations/show.ts","components/common/Preloader/Preloader.tsx","redux/auth-selectors.ts","components/common/PreloaderSmall/PreloaderSmall.tsx","redux/profile-reducer.ts","redux/posts-reducer.ts","redux/dialogs-reducer.ts","components/common/Modal/Modal.tsx","api/users-api.ts","utils/object-helpers.js","redux/users-reducer.ts","components/common/Preloader/Preloader.module.sass","assets/images/menu.svg","components/common/Overlay/Overlay.module.sass","components/Footer/Footer.module.sass","components/common/PreloaderSmall/PreloaderSmall.module.sass","serviceWorker.js","redux/app-reducer.ts","redux/app-selectors.ts","redux/redux-store.ts","components/Header/MobileMenu/MobileMenu.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","App.tsx","index.js"],"names":["ResultCodesEnum","ResultCodesWithCaptchaEnum","instance","axios","create","withCredentials","baseURL","headers","profileAPI","getUsersProfile","userId","get","then","response","data","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfileInfo","profile","module","exports","authAPI","email","password","rememberMe","captcha","post","delete","securityAPI","url","initialState","login","isAuth","captchaUrl","isLoading","actions","type","payload","checkAuth","dispatch","a","checkout","resultCode","Success","id","Promise","resolve","CaptchaIsRequired","getCaptchaUrl","reject","logout","authReducer","state","action","hide","target","cb","anime","targets","keyframes","opacity","duration","easing","loop","complete","Overlay","React","memo","onClick","className","s","overlay","show","Preloader","preloader","src","img","alt","getUserId","auth","getLogin","getIsAuth","getIsLoading","PreloaderSmall","isLoadingAvatar","isLoadingProfileInfoChanges","isLoadingStatus","photos","getUserProfile","getUserStatus","updateUserStatus","file","profileInfo","getState","messages","console","log","profileReducer","posts","likesCount","text","maxPostId","likedPosts","newPost","postId","addPost","deletePost","likePost","dislikePost","postReducer","deletePostArr","i","length","splice","isPostLiked","some","number","newLikedPostsArr","push","likePostsArr","isPostLiked2","filter","dislikePostsArr","currentDialogId","currentUser","opponentId","date","from","messageText","dialogs","users","isMessageFetching","isMessagesLoading","setCurrentDialogId","dialogId","setCurrentUserSuccess","user","sendMessageSuccess","newMessage","setDialog","setUsersSuccess","setIsMessageFetching","setIsMessagesLoading","setUser","checkUser","setCurrentUser","sendMessage","dialogsPage","isNewDialog","forEach","dialog","dialogsReducer","Modal","props","modalRef","createRef","updateState","setState","buttonSuccessText","buttonRejectText","callbackResolve","callbackReject","callbackCancel","cancelModal","modal","_closeModalCallback","resolveModal","rejectModal","setIsOpen","newState","style","display","htmlElements","document","getElementsByClassName","modalContainer","this","prevProps","prevState","ref","buttons","cn","PureComponent","usersAPI","currentPage","onPageLimit","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","setAddUsers","setTotalUsersCount","total","toggleIsFetching","setIsLoading","toggleFollowingProgress","requestUsers","totalCount","requestAddUsers","followUnfollowFlow","methodAPI","actionCreator","follow","unfollow","usersReducer","followed","Boolean","window","location","hostname","match","initialized","globalError","setInitial","setGlobalError","error","appReducer","getInitialized","app","getGlobalError","rootReducer","combineReducers","profilePage","postsPage","postsReducer","usersPage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","MobileMenu","closeMobileMenu","mobileMenu","useRef","useEffect","current","mobileMenuContainer","to","activeClassName","active","Header","useState","isOpenMobileMenu","setIsOpenMobileMenu","header","container","href","logo","menuController","menuImg","loginBlock","userLogin","HeaderComponent","mapDispatchToProps","connect","Navbar","navbar","Footer","footer","ProfileContainer","lazy","DialogsContainer","UsersContainer","LoginContainer","News","Music","Settings","ErrorContent","App","isModalOpen","catchAllUnhandledErrors","promise","setModalError","reason","setIsModalOpen","initializeApp","addEventListener","removeEventListener","isOpen","HeaderContainer","fallback","path","render","exact","h1","h2","linkUrl","linkText","AppContainer","withRouter","SamuraiJSApp","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f35bb075.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '321994fc-144a-4c0e-a36e-a2437572c56d'\r\n    }\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\n\r\nexport enum ResultCodesWithCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    resultCode: RC\r\n    messages: Array<string>\r\n}","import {UserContactsType} from \"../types/User\"\r\nimport {ProfileType} from \"../types/Profile\"\r\nimport {instance, APIResponseType} from \"./api\"\r\n\r\n\r\n\r\nexport type SavePhotoResponseType = {\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n\r\n    getUsersProfile(userId: number){\r\n        return (\r\n            instance.get<ProfileType>(`profile/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    getStatus(userId: number){\r\n        return(\r\n            instance.get<string | null>(`profile/status/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    updateStatus(status: string | null){\r\n        return(\r\n            instance.put<APIResponseType>(`profile/status`, {status:status})\r\n        )\r\n    },\r\n\r\n    savePhoto(photoFile: File){\r\n        let formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return(\r\n            instance.put<APIResponseType<SavePhotoResponseType>>(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n                .then((response) => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    saveProfileInfo(profile: {\r\n        aboutMe: string | null\r\n        lookingForAJob: boolean\r\n        lookingForAJobDescription: string | null\r\n        fullName: string,\r\n        contacts: UserContactsType\r\n    }){\r\n        return(\r\n            instance.put<APIResponseType>(`profile`, profile)\r\n        )\r\n    }\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__IwUb1\",\"container\":\"Header_container__3GB8E\",\"logo\":\"Header_logo__mbnhI\",\"menuController\":\"Header_menuController__3R4j9\",\"loginBlock\":\"Header_loginBlock__2518E\",\"userLogin\":\"Header_userLogin__1ZD75\"};","import {instance, ResultCodesEnum, ResultCodesWithCaptchaEnum, APIResponseType} from \"./api\";\r\n\r\n\r\n\r\nexport type CheckAuthResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    userId: number\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n\r\n    checkAuth(){\r\n        return (\r\n            instance.get<APIResponseType<CheckAuthResponseType>>(`auth/me`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe = false, captcha = null as string | null){\r\n        return (\r\n            instance.post<APIResponseType<LoginResponseType, ResultCodesEnum & ResultCodesWithCaptchaEnum>>(`auth/login`, {email, password,rememberMe,captcha})\r\n        )\r\n    },\r\n\r\n    logout(){\r\n        return (\r\n            instance.delete<APIResponseType>(`auth/login`)\r\n        )\r\n    }\r\n\r\n}\r\n","import {instance} from \"./api\";\r\n\r\n\r\n\r\nexport type GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\n\r\n\r\nexport const securityAPI = {\r\n\r\n    getCaptchaUrl(){\r\n        return (\r\n            instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n                .then(response => {\r\n                    return response.data.url\r\n                })\r\n        )\r\n    }\r\n\r\n}\r\n","import {authAPI} from \"../api/auth-api\"\r\nimport {securityAPI} from \"../api/security-api\"\r\nimport {ResultCodesEnum, ResultCodesWithCaptchaEnum} from \"../api/api\"\r\nimport {InferActionsTypes, BaseThunkType} from \"./redux-store\"\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null,\r\n    isLoading: false\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'auth/SET_AUTH_USER_DATA':\r\n        case 'auth/GET_CAPTCHA_URL':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        case 'auth/DELETE_CAPTCHA':\r\n            return {\r\n                ...state,\r\n                captchaUrl: null\r\n            }\r\n\r\n        case 'auth/SET_IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.status\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    setAuthUserData:\r\n        (userId: number | null, email: string | null, login: string | null, isAuth: boolean) =>\r\n            ({ type: 'auth/SET_AUTH_USER_DATA', payload: {userId, email, login, isAuth} } as const),\r\n\r\n    getCaptchaUrlSuccess: (captchaUrl: string | null) =>\r\n        ({ type: 'auth/GET_CAPTCHA_URL', payload: {captchaUrl} } as const),\r\n\r\n    deleteCaptcha: () =>\r\n        ({ type: 'auth/DELETE_CAPTCHA' } as const),\r\n\r\n    setIsLoading: (status: boolean) =>\r\n        ({ type: 'auth/SET_IS_LOADING', status } as const)\r\n}\r\ntype ActionTypes = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\n\r\nexport const checkAuth = (): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    const checkout = await authAPI.checkAuth()\r\n    if(checkout.data){\r\n        if(checkout.resultCode === ResultCodesEnum.Success){\r\n            const {id, login, email} = checkout.data\r\n            dispatch(actions.setAuthUserData(id, email, login, true))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string | null): BaseThunkType<ActionTypes, string> => async (dispatch) => {\r\n    dispatch(actions.setIsLoading(true))\r\n\r\n    const response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n    if(response.data.resultCode === ResultCodesEnum.Success){\r\n        await dispatch(checkAuth())\r\n        dispatch(actions.deleteCaptcha())\r\n        dispatch(actions.setIsLoading(false))\r\n        return Promise.resolve('Logged in')\r\n    }else {\r\n        dispatch(actions.setIsLoading(false))\r\n\r\n        if (response.data.resultCode === ResultCodesWithCaptchaEnum.CaptchaIsRequired) {\r\n            await dispatch(getCaptchaUrl())\r\n            return Promise.reject('Need to write a captcha')\r\n        }else if(response.data.resultCode === 1){\r\n            return Promise.reject('Incorrect login or password')\r\n        }else{\r\n            return Promise.reject('Server error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getCaptchaUrl = (): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    dispatch(actions.getCaptchaUrlSuccess(response))\r\n}\r\n\r\n\r\n\r\nexport const logout = (): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if(response.data.resultCode === ResultCodesEnum.Success){\r\n        dispatch(actions.setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default authReducer","import anime from \"animejs\"\r\n\r\nconst hide = (target: HTMLElement, cb?: () => void) => {\r\n    anime({\r\n        targets: target,\r\n        keyframes: [\r\n            {opacity: 1},\r\n            {opacity: 0}\r\n        ],\r\n        duration: 300,\r\n        easing: 'linear',\r\n        loop: false,\r\n        complete: () => {\r\n            if(cb) cb()\r\n        }\r\n    });\r\n};\r\n\r\nexport default hide","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobileMenuContainer\":\"MobileMenu_mobileMenuContainer__1UmkP\",\"mobileMenu\":\"MobileMenu_mobileMenu__2COii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__30h2V\",\"active\":\"Navbar_active__3RDi9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"Modal_modalContainer__2no1k\",\"modal\":\"Modal_modal__276LE\",\"buttons\":\"Modal_buttons__3sTsI\"};","module.exports = __webpack_public_path__ + \"static/media/loader.9205748d.svg\";","import React from 'react'\r\nimport s from './Overlay.module.sass'\r\n\r\n\r\ntype PropsType = {\r\n    onClick?: () => void\r\n}\r\n\r\nconst Overlay: React.FC<PropsType> = React.memo(({onClick}) => {\r\n    return <div onClick={onClick} className={s.overlay} />\r\n})\r\n\r\n\r\n\r\nexport default Overlay","import anime from \"animejs\";\r\n\r\nconst show = (target: HTMLElement, cb?: () => void) => {\r\n    anime({\r\n        targets: target,\r\n        keyframes: [\r\n            {opacity: 0},\r\n            {opacity: 1}\r\n        ],\r\n        duration: 300,\r\n        easing: 'linear',\r\n        loop: false,\r\n        complete: () => {\r\n            if(cb) cb()\r\n        }\r\n    });\r\n};\r\n\r\nexport default show;","import React from 'react'\r\nimport s from './Preloader.module.sass'\r\nimport img from '../../../assets/images/loader.svg'\r\n\r\n\r\n\r\nconst Preloader = React.memo(() => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={img} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default Preloader","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUserId = (state: AppStateType) => {\r\n    return state.auth.userId;\r\n}\r\n\r\nexport const getEmail = (state: AppStateType) => {\r\n    return state.auth.email;\r\n}\r\n\r\nexport const getLogin = (state: AppStateType) => {\r\n    return state.auth.login;\r\n}\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const getCaptchaUrl = (state: AppStateType) => {\r\n    return state.auth.captchaUrl;\r\n}\r\nexport const getIsLoading = (state: AppStateType) => {\r\n    return state.auth.isLoading;\r\n}","import React from 'react'\r\nimport s from './PreloaderSmall.module.sass'\r\nimport img from '../../../assets/images/loader.svg'\r\n\r\n\r\n\r\nconst PreloaderSmall = React.memo(() => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={img} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default PreloaderSmall","import {ResultCodesEnum} from \"../api/api\"\r\nimport {profileAPI} from \"../api/profile-api\"\r\nimport {UserContactsType, UserPhotosType} from \"../types/User\"\r\nimport {ProfileType} from \"../types/Profile\"\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\"\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    profile: null as ProfileType | null,\r\n    isLoadingAvatar: false,\r\n    isLoadingProfileInfoChanges: false,\r\n    status: null as string | null,\r\n    isLoadingStatus: false,\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'profile/SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case 'profile/SET_USER_STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case 'profile/SAVE_PHOTO_SUCCESS':\r\n            if(state.profile){\r\n                return {\r\n                    ...state,\r\n                    profile: {...state.profile, photos: action.photos}\r\n                }\r\n            }else{\r\n                return state\r\n            }\r\n\r\n        case 'profile/SET_IS_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                isLoadingStatus: action.status\r\n            }\r\n\r\n        case 'profile/SET_IS_LOADING_PROFILE_INFO_CHANGES':\r\n            return {\r\n                ...state,\r\n                isLoadingProfileInfoChanges: action.status\r\n            }\r\n\r\n        case 'profile/SET_IS_LOADING_AVATAR':\r\n            return {\r\n                ...state,\r\n                isLoadingAvatar: action.status\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    setUserProfile: (profile: ProfileType) =>\r\n        ({ type: 'profile/SET_USER_PROFILE',  profile} as const),\r\n\r\n    setUserStatus: (status: string | null) =>\r\n        ({ type: 'profile/SET_USER_STATUS',  status} as const),\r\n\r\n    savePhotoSuccess: (photos: UserPhotosType) =>\r\n        ({ type: 'profile/SAVE_PHOTO_SUCCESS',  photos} as const),\r\n\r\n    setIsLoadingStatus: (status: boolean) =>\r\n        ({ type: 'profile/SET_IS_LOADING_STATUS',  status} as const),\r\n\r\n    setIsLoadingProfileInfoChanges: (status: boolean) =>\r\n        ({ type: 'profile/SET_IS_LOADING_PROFILE_INFO_CHANGES',  status} as const),\r\n\r\n    setIsLoadingAvatar: (status: boolean) =>\r\n        ({ type: 'profile/SET_IS_LOADING_AVATAR',  status} as const)\r\n}\r\ntype ActionTypes = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\nexport const getUserProfile = (userId: number): BaseThunkType<ActionTypes> => {\r\n    return async (dispatch) => {\r\n        if(userId){\r\n            const response = await profileAPI.getUsersProfile(userId)\r\n            dispatch(actions.setUserProfile(response))\r\n            await dispatch(getUserStatus(userId))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getUserStatus = (userId: number): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    dispatch(actions.setIsLoadingStatus(true))\r\n    dispatch(actions.setUserStatus(null))\r\n\r\n    if(userId){\r\n        const response = await profileAPI.getStatus(userId)\r\n        dispatch(actions.setUserStatus(response))\r\n        dispatch(actions.setIsLoadingStatus(false))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUserStatus = (status: string | null): BaseThunkType<ActionTypes, string> => async (dispatch) => {\r\n    dispatch(actions.setIsLoadingStatus(true))\r\n\r\n    const response = await profileAPI.updateStatus(status)\r\n    dispatch(actions.setIsLoadingStatus(false))\r\n    if(response.data.resultCode === ResultCodesEnum.Success){\r\n        dispatch(actions.setUserStatus(status))\r\n        return Promise.resolve('Status updated')\r\n    }else{\r\n        return Promise.reject('Server error')\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const savePhoto = (file: File): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    dispatch(actions.setIsLoadingAvatar(true))\r\n    const response = await profileAPI.savePhoto(file)\r\n    dispatch(actions.setIsLoadingAvatar(false))\r\n\r\n    if(response.resultCode === ResultCodesEnum.Success){\r\n        dispatch(actions.savePhotoSuccess(response.data.photos))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const saveProfileInfo = (profileInfo: {\r\n    aboutMe: string | null\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string,\r\n    contacts: UserContactsType\r\n}): BaseThunkType<ActionTypes, string> => async (dispatch, getState) => {\r\n\r\n    dispatch(actions.setIsLoadingProfileInfoChanges(true))\r\n\r\n    const userId: number | null = await getState().auth.userId\r\n    const response = await profileAPI.saveProfileInfo(profileInfo)\r\n\r\n    dispatch(actions.setIsLoadingProfileInfoChanges(false))\r\n\r\n    if(response.data.resultCode === 0){\r\n        if(userId){\r\n            await dispatch(getUserProfile(userId))\r\n        }\r\n        return Promise.resolve('Profile updated')\r\n    }else if(response.data.messages){\r\n        console.log('reject')\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n    return Promise.reject('Server error')\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default profileReducer","import {PostType} from \"../types/Post\"\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\"\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    posts:[\r\n        {id: 1, likesCount: 1, text: 'OOP Typically depends on shared state. Objects and behaviors are typically tacked together on the same entity, which may be accessed at random by any number of functions with non-deterministic order, which may lead to undesirable behavior such as race conditions.'},\r\n        {id: 2, likesCount: 5, text: 'It’s easy to understand the basic concept of objects and easy to interpret the meaning of method calls. OOP tends to use an imperative style rather than a declarative style, which reads like a straight-forward set of instructions for the computer to follow.'},\r\n        {id: 3, likesCount: 2, text: 'Using the functional paradigm, programmers avoid any shared state or side-effects, which eliminates bugs caused by multiple functions competing for the same resources. With features such as the availability of point-free style (aka tacit programming), functions tend to be radically simplified and easily recomposed for more generally reusable code compared to OOP.'},\r\n        {id: 4, likesCount: 40, text: 'Over exploitation of FP features such as point-free style and large compositions can potentially reduce readability because the resulting code is often more abstractly specified, more terse, and less concrete.\\n\\n' +\r\n                'More people are familiar with OO and imperative programming than functional programming, so even common idioms in functional programming can be confusing to new team members.'},\r\n    ] as Array<PostType>,\r\n    maxPostId: 4,\r\n    likedPosts: [1,4] as Array<number>,\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\n\r\n\r\n\r\nconst postReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'posts/ADD-POST':\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: state.maxPostId+1, text: action.newPost,likesCount: 0}],\r\n                maxPostId: state.maxPostId+1\r\n            }\r\n\r\n        case 'posts/DELETE_POST':\r\n            let deletePostArr = [...state.posts]\r\n            for(let i = 0; i < deletePostArr.length; i++){\r\n                if(deletePostArr[i].id === action.postId){\r\n                    deletePostArr.splice(i, 1)\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                posts: deletePostArr\r\n            }\r\n\r\n        case 'posts/LIKE_POST':\r\n            let isPostLiked = state.likedPosts.some((number) => number === action.postId)\r\n            if(!isPostLiked){\r\n                let newLikedPostsArr = state.likedPosts\r\n                newLikedPostsArr.push(action.postId)\r\n                let likePostsArr =  [...state.posts]\r\n                for(let i = 0 ;i < likePostsArr.length; i++){\r\n                    if(likePostsArr[i].id === action.postId){\r\n                        likePostsArr[i].likesCount ++\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    likedPosts: newLikedPostsArr,\r\n                    posts: likePostsArr\r\n                }\r\n            }\r\n            return state\r\n\r\n        case 'posts/DISLIKE_POST':\r\n            let isPostLiked2 = state.likedPosts.some((number) => number === action.postId)\r\n            if(isPostLiked2){\r\n                let newLikedPostsArr = state.likedPosts.filter((number) => number !== action.postId)\r\n                let dislikePostsArr =  [...state.posts]\r\n                for(let i = 0; i < dislikePostsArr.length; i++){\r\n                    if(dislikePostsArr[i].id === action.postId){\r\n                        dislikePostsArr[i].likesCount --\r\n                    }\r\n                }\r\n                return {\r\n                    ...state,\r\n                    likedPosts: newLikedPostsArr,\r\n                    posts: dislikePostsArr\r\n                }\r\n            }\r\n            return state\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    addPostSuccess: (newPost: string) =>\r\n        ({ type: 'posts/ADD-POST', newPost} as const),\r\n\r\n    deletePostSuccess: (postId: number) =>\r\n        ({ type: 'posts/DELETE_POST', postId} as const),\r\n\r\n    likePostSuccess: (postId: number) =>\r\n        ({ type: 'posts/LIKE_POST', postId} as const),\r\n\r\n    dislikePostSuccess: (postId: number) =>\r\n        ({ type: 'posts/DISLIKE_POST', postId} as const),\r\n}\r\ntype ActionTypes = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\n\r\nexport const addPost = (newPost: string): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    await dispatch(actions.addPostSuccess(newPost))\r\n}\r\n\r\n\r\n\r\nexport const deletePost = (postId: number): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    await dispatch(actions.deletePostSuccess(postId))\r\n}\r\n\r\n\r\n\r\nexport const likePost = (postId: number): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    await dispatch(actions.likePostSuccess(postId))\r\n}\r\n\r\n\r\n\r\nexport const dislikePost = (postId: number): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    await dispatch(actions.dislikePostSuccess(postId))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default postReducer","import {profileAPI} from '../api/profile-api'\r\nimport {ProfileType} from \"../types/Profile\"\r\nimport {DialogType} from \"../types/Dialog\"\r\nimport {MessageType} from \"../types/Message\"\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\"\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    currentDialogId: null as number | null,\r\n    currentUser: null as ProfileType | null,\r\n    messages: [\r\n        {id: 1, opponentId: 2, date: 1589972640000, from: 'me', messageText:'Lorem ipsum dolor sit amet.'},\r\n        {id: 2, opponentId: 2, date: 1589976600000, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Corporis, veritatis.'},\r\n        {id: 3, opponentId: 2, date: 1589979600000, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing.'},\r\n        {id: 4, opponentId: 2, date: 1589988360000, from: 'me', messageText:'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam tempora iste voluptatum veritatis eos quo, esse qui ipsam odio! Dicta?'},\r\n        {id: 5, opponentId: 9, date: 1589988720000, from: 'me', messageText:'Lorem ipsum dolor sit amet.'},\r\n        {id: 6, opponentId: 11, date: 1589994180000, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Corporis, veritatis.'},\r\n        {id: 7, opponentId: 11, date: 1589997480000, from: 'opponent', messageText:'Lorem ipsum, dolor sit amet consectetur adipisicing.'},\r\n        {id: 8, opponentId: 12, date: 1589997840000, from: 'me', messageText:'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam tempora iste voluptatum veritatis eos quo, esse qui ipsam odio! Dicta?'},\r\n    ] as Array<MessageType>,\r\n    dialogs: [\r\n        {id: 1, opponentId: 2},\r\n        {id: 2, opponentId: 9},\r\n        {id: 3, opponentId: 11},\r\n        {id: 4, opponentId: 12}\r\n    ] as Array<DialogType>,\r\n    users: [] as Array<ProfileType>,  // collecting users from dialogs arr (that's why we dont need to get user again in Message and Dialog components)\r\n    isMessageFetching: false,\r\n    isMessagesLoading: false\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\n\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'dialogs/SET_CURRENT_DIALOG_ID':\r\n            return {\r\n                ...state,\r\n                currentDialogId: action.dialogId\r\n            }\r\n\r\n        case 'dialogs/SET_CURRENT_USER':\r\n            return {\r\n                ...state,\r\n                currentUser: action.user\r\n            }\r\n\r\n        case 'dialogs/SEND-MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: state.messages.length + 1,\r\n                    opponentId: action.userId,\r\n                    date: action.date,\r\n                    from: 'me',\r\n                    messageText: action.newMessage,\r\n                }]\r\n            }\r\n\r\n        case 'dialogs/SET_DIALOG':\r\n            return {\r\n                ...state,\r\n                dialogs: [...state.dialogs, {\r\n                    id: state.dialogs.length + 1,\r\n                    opponentId: action.userId\r\n                }]\r\n            }\r\n\r\n        case 'dialogs/SET_USER':\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.user]\r\n            }\r\n\r\n        case 'dialogs/MESSAGE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isMessageFetching: action.status\r\n            }\r\n\r\n        case 'dialogs/SET_IS_MESSAGES_LOADING':\r\n            return {\r\n                ...state,\r\n                isMessagesLoading: action.status\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    setCurrentDialogId: (dialogId: number | null) =>\r\n        ({ type: 'dialogs/SET_CURRENT_DIALOG_ID', dialogId } as const),\r\n\r\n    setCurrentUserSuccess: (user: ProfileType | null)=>\r\n        ({ type: 'dialogs/SET_CURRENT_USER', user } as const),\r\n\r\n    sendMessageSuccess: (userId: number, newMessage: string, date: number) =>\r\n        ({ type: 'dialogs/SEND-MESSAGE', userId, newMessage, date } as const),\r\n\r\n    setDialog: (userId: number) =>\r\n        ({ type: 'dialogs/SET_DIALOG', userId } as const),\r\n\r\n    setUsersSuccess: (user: ProfileType) =>\r\n        ({ type: 'dialogs/SET_USER', user } as const),\r\n\r\n    setIsMessageFetching: (status: boolean) =>\r\n        ({ type: 'dialogs/MESSAGE_IS_FETCHING', status } as const),\r\n\r\n    setIsMessagesLoading: (status: boolean) =>\r\n        ({ type: 'dialogs/SET_IS_MESSAGES_LOADING', status } as const)\r\n}\r\ntype ActionTypes = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\n\r\nexport const setUser = (userId: number): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    if(userId){\r\n        try{\r\n            const response = await profileAPI.getUsersProfile(userId)\r\n            dispatch(actions.setUsersSuccess(response))\r\n        }catch{\r\n            console.log('No such user')\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const checkUser = (userId: number): BaseThunkType<ActionTypes, boolean> => async () => {\r\n    try{\r\n        await profileAPI.getUsersProfile(userId)\r\n        return true\r\n    }catch{\r\n        return false\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setCurrentUser = (userId: number | null): BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    dispatch(actions.setIsMessagesLoading(true))\r\n    if(userId){\r\n        try{\r\n            const response = await profileAPI.getUsersProfile(userId)\r\n            if(response.userId){\r\n                dispatch(actions.setCurrentUserSuccess(response))\r\n            }\r\n        }catch{\r\n            dispatch(actions.setCurrentUserSuccess(null))\r\n        }\r\n\r\n    }else{\r\n        dispatch(actions.setCurrentUserSuccess(null))\r\n    }\r\n\r\n    dispatch(actions.setIsMessagesLoading(false))\r\n}\r\n\r\n\r\n\r\nexport const sendMessage = (userId: number, newMessage: string, date: number): BaseThunkType<ActionTypes> => async (dispatch, getState) => {\r\n    const state = getState()\r\n    const dialogs = state.dialogsPage.dialogs\r\n\r\n    dispatch(actions.setIsMessageFetching(true))\r\n    let isNewDialog = true\r\n    dialogs.forEach((dialog: DialogType) => {\r\n        if(dialog.opponentId === userId){\r\n            isNewDialog = false\r\n        }\r\n    })\r\n    if(isNewDialog){\r\n        await profileAPI.getUsersProfile(userId)\r\n        dispatch(actions.setDialog(userId))\r\n    }\r\n    dispatch(actions.sendMessageSuccess(userId, newMessage, date))\r\n    dispatch(actions.setIsMessageFetching(false))\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default dialogsReducer\r\n\r\n","import React from 'react'\r\nimport cn from 'classnames'\r\nimport s from './Modal.module.sass'\r\nimport PreloaderSmall from \"../PreloaderSmall/PreloaderSmall\"\r\nimport Overlay from \"../Overlay/Overlay\"\r\nimport show from \"../../../utils/animations/show\"\r\nimport hide from \"../../../utils/animations/hide\"\r\n\r\n\r\n/* Modal windows that can be without buttons, with 1 resolve/reject button or 2 buttons */\r\n/* Made with class component because of show-animation in beginning and loading state inside\r\n(when state in func have changed component rerenders and begin show-animation again) */\r\n\r\n\r\ntype OwnPropsType = {\r\n    text?: string | null\r\n    buttonSuccessText?: string\r\n    buttonRejectText?: string\r\n    callbackResolve?: (() => void) | undefined\r\n    callbackReject?: (() => void) | undefined\r\n    callbackCancel?: (() => void) | undefined\r\n    setIsOpen: (status: boolean) => void\r\n    isOpen: boolean\r\n}\r\n\r\ntype PropsType = OwnPropsType\r\n\r\ntype StateType = {\r\n    text: string | null\r\n    buttonSuccessText: string\r\n    buttonRejectText: string | null\r\n    callbackResolve: (() => void) | undefined\r\n    callbackReject: (() => void) | undefined\r\n    callbackCancel: (() => void) | undefined\r\n    modal: HTMLElement | null\r\n    isLoading: boolean\r\n\r\n}\r\n\r\n\r\n\r\n\r\nclass Modal extends React.PureComponent<PropsType, StateType>{\r\n\r\n    constructor(props: PropsType) {\r\n        super(props)\r\n        this.state = {\r\n            text: this.props.text || 'Are you sure?',\r\n            buttonSuccessText: this.props.buttonSuccessText || 'Ok',\r\n            buttonRejectText: this.props.buttonRejectText || '',\r\n\r\n            callbackResolve: this.props.callbackResolve,\r\n            callbackReject: this.props.callbackReject,\r\n            callbackCancel: this.props.callbackReject,\r\n\r\n            modal: null,\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    modalRef = React.createRef<HTMLDivElement>()\r\n\r\n    componentDidMount() {\r\n        const htmlElements = document.getElementsByClassName(s.modalContainer) as HTMLCollectionOf<HTMLElement>\r\n\r\n        this.setState({\r\n            modal: htmlElements[0]\r\n        }, () => {\r\n            if(this.state.modal !== null){\r\n                show(this.state.modal)\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: StateType) {\r\n        if(prevProps !== this.props){\r\n            this.updateState()\r\n        }\r\n    }\r\n\r\n\r\n    updateState = () =>{\r\n        this.setState({\r\n            text: this.props.text || 'Are you sure?',\r\n            buttonSuccessText: this.props.buttonSuccessText || 'Ok',\r\n            buttonRejectText: this.props.buttonRejectText || '',\r\n\r\n            callbackResolve: this.props.callbackResolve,\r\n            callbackReject: this.props.callbackReject,\r\n            callbackCancel: this.props.callbackReject,\r\n        })\r\n    }\r\n\r\n\r\n    cancelModal = () => {\r\n        this.setState({\r\n            isLoading: true\r\n        }, async () => {\r\n            if(this.props.callbackCancel){\r\n                await this.props.callbackCancel()\r\n            }\r\n            if(this.state.modal !== null){\r\n                hide(this.state.modal, this._closeModalCallback)\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveModal = async () => {\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        if(this.state.callbackResolve){\r\n            await this.state.callbackResolve()\r\n        }\r\n        if(this.state.modal !== null){\r\n            hide(this.state.modal, this._closeModalCallback)\r\n        }\r\n    }\r\n\r\n    rejectModal = async () => {\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        if(this.state.callbackReject){\r\n            await this.state.callbackReject()\r\n        }\r\n        if(this.state.modal !== null){\r\n            hide(this.state.modal, this._closeModalCallback)\r\n        }\r\n    }\r\n\r\n    _closeModalCallback = () => {\r\n        this.props.setIsOpen(false)\r\n\r\n        let newState = this.state.modal\r\n        if(newState !== null){\r\n            newState.style.display = 'none'\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div ref={this.modalRef} className={s.modalContainer}>\r\n\r\n                <Overlay onClick={this.cancelModal} />\r\n                <div className={s.modal}>\r\n                    <span>{this.state.text}</span>\r\n                    <div className={s.buttons}>\r\n\r\n                        {this.state.isLoading &&\r\n                            <PreloaderSmall />\r\n                        }\r\n\r\n                        {!!this.state.buttonSuccessText && !this.state.isLoading &&\r\n                            <div onClick={this.resolveModal} className={cn('button', 'button-success')}>{this.state.buttonSuccessText}</div>\r\n                        }\r\n\r\n                        {!!this.state.buttonRejectText && !this.state.isLoading &&\r\n                            <div onClick={this.rejectModal} className={cn('button', 'button-normal')}>{this.state.buttonRejectText}</div>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Modal","import {instance, APIResponseType} from \"./api\"\r\n\r\n\r\n\r\nexport type UsersUserType = {\r\n    id: number\r\n    name: string\r\n    status: string | null\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n    followed: boolean\r\n}\r\n\r\nexport type RequestUsersResponseType = {\r\n    items: Array<UsersUserType>\r\n    totalCount: number\r\n    error: string\r\n}\r\n\r\n\r\n\r\nexport const usersAPI = {\r\n\r\n    requestUsers(currentPage = 1, onPageLimit = 10){\r\n        return (\r\n            instance.get<RequestUsersResponseType>(`users?page=${currentPage}&count=${onPageLimit}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    follow(userId: number){\r\n        return (\r\n            instance.post<APIResponseType>(`follow/${userId}`, {})\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n\r\n    unfollow(userId: number){\r\n        return (\r\n            instance.delete<APIResponseType>(`follow/${userId}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    }\r\n\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(item => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item;\r\n    })\r\n}\r\n\r\nexport const getPropertyInObject = function (propertyName, obj) {\r\n    return obj[propertyName];\r\n};","import {ResultCodesEnum} from \"../api/api\"\r\nimport {usersAPI} from \"../api/users-api\"\r\nimport {updateObjectInArray} from \"../utils/object-helpers\"\r\nimport {UserType} from \"../types/User\"\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\"\r\nimport {Dispatch} from \"redux\"\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    totalUsersCount: 0,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>,\r\n    isLoading: true\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\n\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'users/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n\r\n        case 'users/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n\r\n        case 'users/SET-USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        case 'users/SET_ADD_USERS':\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.users]\r\n            }\r\n\r\n        case 'users/SET_TOTAL_USERS_COUNT':\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.total\r\n            }\r\n\r\n\r\n        case 'users/TOGGLE_IS_FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case 'users/SET_IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.status\r\n            }\r\n\r\n        case 'users/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) =>\r\n        ({ type: 'users/FOLLOW', userId: userId } as const),\r\n\r\n    unfollowSuccess: (userId: number) =>\r\n        ({ type: 'users/UNFOLLOW', userId: userId } as const),\r\n\r\n    setUsers: (users: Array<UserType>) =>\r\n        ({ type: 'users/SET-USERS', users } as const),\r\n\r\n    setAddUsers: (users: Array<UserType>) =>\r\n        ({ type: 'users/SET_ADD_USERS', users } as const),\r\n\r\n    setTotalUsersCount: (total: number) =>\r\n        ({ type: 'users/SET_TOTAL_USERS_COUNT', total } as const),\r\n\r\n    toggleIsFetching: (isFetching: boolean) =>\r\n        ({ type: 'users/TOGGLE_IS_FETCHING', isFetching } as const),\r\n\r\n    setIsLoading: (status: boolean) =>\r\n        ({ type: 'users/SET_IS_LOADING', status } as const),\r\n\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) =>\r\n        ({ type: 'users/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId } as const)\r\n\r\n}\r\ntype ActionTypes = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\n\r\nexport const requestUsers = (currentPage: number, onPageLimit: number): BaseThunkType<ActionTypes> =>  {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(actions.setIsLoading(true))\r\n\r\n        let data = await usersAPI.requestUsers(currentPage, onPageLimit)\r\n        dispatch(actions.setUsers(data.items))\r\n        dispatch(actions.setTotalUsersCount(data.totalCount))\r\n\r\n        dispatch(actions.setIsLoading(false))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const requestAddUsers = (currentPage: number, onPageLimit: number): BaseThunkType<ActionTypes, string> =>  {\r\n    return async (dispatch) => {\r\n        dispatch(actions.toggleIsFetching(true))\r\n\r\n        let data = await usersAPI.requestUsers(currentPage, onPageLimit)\r\n        dispatch(actions.setAddUsers(data.items))\r\n        dispatch(actions.toggleIsFetching(false))\r\n        return Promise.resolve('Get users')\r\n    }\r\n}\r\n\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch<ActionTypes>,\r\n                                  userId: number,\r\n                                  methodAPI: any,\r\n                                  actionCreator: ActionTypes) => {\r\n\r\n    dispatch(actions.toggleFollowingProgress(true, userId))\r\n\r\n    const data = await methodAPI\r\n    dispatch(actions.toggleFollowingProgress(false, userId))\r\n    if(data.resultCode === ResultCodesEnum.Success){\r\n        dispatch(actionCreator)\r\n        return Promise.resolve('Followed / unfollowed')\r\n    }else{\r\n        return Promise.reject('Server error')\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const follow = (userId: number): BaseThunkType<ActionTypes> => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow(userId), actions.followSuccess(userId))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const unfollow = (userId: number): BaseThunkType<ActionTypes> =>  {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.unfollow(userId), actions.unfollowSuccess(userId))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1OWMd\"};","module.exports = __webpack_public_path__ + \"static/media/menu.e2931d35.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3e1yK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2ztAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"PreloaderSmall_preloader__Yd-fv\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {checkAuth} from './auth-reducer'\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\"\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null as string | null\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\n\r\n\r\n\r\nconst appReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'app/SET_INITIAL':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        case 'app/SET_GLOBAL_ERROR':\r\n            return {\r\n                ...state,\r\n                globalError: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    setInitial: () => ({ type: 'app/SET_INITIAL' } as const),\r\n    setGlobalError:  (error: string) => ({ type: 'app/SET_GLOBAL_ERROR', error } as const)\r\n}\r\ntype ActionTypes = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\n\r\nexport const initializeApp = ():BaseThunkType<ActionTypes> => async (dispatch) => {\r\n    await dispatch(checkAuth())\r\n    dispatch(actions.setInitial())\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getInitialized = (state: AppStateType) => {\r\n    return state.app.initialized;\r\n}\r\n\r\nexport const getGlobalError = (state: AppStateType) => {\r\n    return state.app.globalError;\r\n}","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport postsReducer from \"./posts-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    app: appReducer,\r\n    profilePage: profileReducer,\r\n    postsPage: postsReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U} ? U : never\r\n\r\nexport type BaseThunkType<AT extends Action, R = void> = ThunkAction<Promise<R>, AppStateType, unknown, AT>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// @ts-ignore\r\n// window.__store__ = store;\r\n\r\n\r\nexport default store;","import React, {useEffect, useRef} from 'react'\r\nimport s from './MobileMenu.module.sass'\r\nimport {NavLink} from \"react-router-dom\"\r\nimport Overlay from \"../../common/Overlay/Overlay\"\r\nimport show from '../../../utils/animations/show'\r\nimport hide from '../../../utils/animations/hide'\r\n\r\n\r\n\r\ntype PropsType = {\r\n    closeMobileMenu: () => void\r\n}\r\n\r\nconst MobileMenu: React.FC<PropsType> = React.memo( ({closeMobileMenu}) => {\r\n\r\n    const mobileMenu = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n        if(mobileMenu.current !== null){\r\n            show(mobileMenu.current)\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div ref={mobileMenu} onClick={() => {mobileMenu.current && hide(mobileMenu.current, closeMobileMenu)}} className={s.mobileMenuContainer}>\r\n            <Overlay  />\r\n            <nav className={s.mobileMenu}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n            </nav>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default MobileMenu","import React, {useState} from 'react'\r\nimport s from './Header.module.sass'\r\nimport {NavLink} from \"react-router-dom\"\r\nimport cn from 'classnames'\r\nimport menuImg from '../../assets/images/menu.svg'\r\nimport MobileMenu from \"./MobileMenu/MobileMenu\"\r\n\r\n\r\n\r\ntype PropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logout: () => void\r\n}\r\n\r\nconst Header: React.FC<PropsType> = React.memo( ({login, isAuth, logout}) => {\r\n\r\n    let [isOpenMobileMenu, setIsOpenMobileMenu] = useState(false)\r\n\r\n    const openMobileMenu = () => {\r\n        setIsOpenMobileMenu(true)\r\n    }\r\n\r\n    const closeMobileMenu = () => {\r\n        setIsOpenMobileMenu(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <header className={`${s.header}`}>\r\n                <div className={cn('width-wrapper', s.container)}>\r\n                    <a href='/' className={`${s.logo}`}>\r\n                        <span>AI</span>\r\n                    </a>\r\n                    <div className={s.menuController} onClick={openMobileMenu} >\r\n                        <img src={menuImg} alt=\"menu controller\"/>\r\n                    </div>\r\n                    <div className={s.loginBlock}>\r\n                        {isAuth === true &&\r\n                        <div>\r\n                            <span onClick={logout} className={cn('button','button-normal', s.userLogin)}>Logout</span>\r\n                            <NavLink to={'/profile'} className={cn('button','button-success',)}>{login}</NavLink>\r\n                        </div>\r\n                        }\r\n                        {isAuth === false &&\r\n                        <NavLink className={cn('button','button-success')} to={'/login'}>Login</NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            {isOpenMobileMenu &&\r\n                <MobileMenu closeMobileMenu={closeMobileMenu} />\r\n            }\r\n        </>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default Header","import React from 'react'\r\nimport Header from './Header'\r\nimport {logout} from '../../redux/auth-reducer'\r\nimport {connect} from \"react-redux\"\r\nimport {getIsAuth, getLogin} from \"../../redux/auth-selectors\"\r\nimport {AppStateType} from \"../../redux/redux-store\"\r\n\r\n\r\n\r\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype MapDispatchToProps = {\r\n    logout: () => void\r\n}\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\nclass HeaderComponent extends React.PureComponent<PropsType> {\r\n\r\n    render() {\r\n        const {isAuth, login, logout} = this.props\r\n        return (\r\n            <Header\r\n                isAuth={isAuth}\r\n                login={login}\r\n                logout={logout}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getLogin(state),\r\n})\r\n\r\nconst mapDispatchToProps: MapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent)","import React from 'react'\r\nimport s from './Navbar.module.sass'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Navbar = React.memo( () => {\r\n    return (\r\n        <div className={s.navbar}>\r\n            <nav>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Dialogs</NavLink>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n                {/*<NavLink to='/news' activeClassName={s.active}>News</NavLink>*/}\r\n                {/*<NavLink to='/music' activeClassName={s.active}>Music</NavLink>*/}\r\n                {/*<NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>*/}\r\n            </nav>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default Navbar","import React from 'react';\r\nimport s from './Footer.module.sass'\r\n\r\n\r\n\r\nconst Footer = React.memo(() => {\r\n    return (\r\n        <footer className={s.footer}/>\r\n    );\r\n})\r\n\r\n\r\n\r\nexport default Footer","import React, {Suspense} from 'react'\nimport './App.sass'\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom'\nimport {connect, Provider} from \"react-redux\"\nimport {compose} from \"redux\"\nimport {actions, initializeApp} from \"./redux/app-reducer\"\nimport {getInitialized, getGlobalError} from \"./redux/app-selectors\"\nimport store, {AppStateType} from \"./redux/redux-store\"\nimport Preloader from \"./components/common/Preloader/Preloader\"\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Navbar from './components/Navbar/Navbar'\nimport Footer from './components/Footer/Footer'\nimport Modal from \"./components/common/Modal/Modal\"\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'))\nconst LoginContainer = React.lazy(() => import('./components/Login/LoginContainer'))\nconst News = React.lazy(() => import('./components/News/News'))\nconst Music = React.lazy(() => import('./components/Music/Music'))\nconst Settings = React.lazy(() => import('./components/Settings/Settings'))\nconst ErrorContent = React.lazy(() => import('./components/ErrorContent/ErrorContent'))\n\n\ntype MapStateToProps = {\n    initialized: boolean\n    globalError: string | null\n}\n\ntype MapDispatchToProps = {\n    initializeApp: () => void\n    setGlobalError: (error: string) => void\n}\n\ntype StateProps = {\n    isModalOpen: boolean\n}\n\ntype PropsType = MapStateToProps & MapDispatchToProps\n\nclass App extends React.PureComponent<PropsType, StateProps> {\n\n    state = {\n        isModalOpen: false\n    }\n\n    componentDidMount() {\n        this.props.initializeApp()\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    catchAllUnhandledErrors = (promise: PromiseRejectionEvent) => {\n        this.setModalError(promise.reason)\n\n    }\n\n    setModalError = (error: string) => {\n        this.setIsModalOpen()\n        this.props.setGlobalError(error)\n    }\n\n    setIsModalOpen = () => {\n        this.setState({\n            isModalOpen: true,\n        })\n    }\n\n\n\n    render() {\n        if (!this.props.initialized) {\n            return <div className={'preloader-container'}><Preloader/></div>\n        }\n\n        return (\n            <div className='app'>\n\n                {this.state.isModalOpen &&\n                    <Modal\n                        text={this.props.globalError}\n                        buttonSuccessText={'Ok'}\n                        isOpen={this.state.isModalOpen}\n                        setIsOpen={this.setIsModalOpen}\n                    />\n\n                }\n\n                <HeaderContainer/>\n\n                <div className=\"main\">\n                    <div className=\"width-wrapper\" >\n                        <div className=\"content-wrapper\">\n\n                            <Navbar/>\n\n                            <div className=\"content\">\n                                <Suspense fallback={<Preloader/>}>\n\n                                    <Switch>\n\n                                        <Route path='/dialogs/:dialogId?'\n                                               render={() => <DialogsContainer/>}/>\n\n                                        <Route path='/profile/:userId?'\n                                               render={() => <ProfileContainer/>}/>\n\n                                        <Route path='/users'\n                                               render={() => <UsersContainer/>}/>\n\n                                        <Route path='/login'\n                                               render={() => <LoginContainer/>}/>\n\n                                        <Route path='/news'\n                                               render={() => <News/>}/>\n\n                                        <Route path='/music'\n                                               render={() => <Music/>}/>\n\n                                        <Route path='/settings'\n                                               render={() => <Settings/>}/>\n\n                                        <Route exact path='/'> <Redirect to='/profile'/> </Route>\n\n                                        <Route path='*'\n                                               render={() => <ErrorContent\n                                                   h1={'Page not found'}\n                                                   h2={'Sorry, we have lost this page, but... our best detectives are already looking for it!'}\n                                                   linkUrl={'/users'}\n                                                   linkText={'Get another try'}\n                                                   />}\n                                        />\n\n                                    </Switch>\n\n                                </Suspense>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n\n                <Footer />\n\n            </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state: AppStateType): MapStateToProps => ({\n    initialized: getInitialized(state),\n    globalError: getGlobalError(state)\n})\n\nconst mapDispatchToProps: MapDispatchToProps = {\n    initializeApp,\n    setGlobalError: actions.setGlobalError\n}\n\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps)\n)(App) as React.ComponentType<any>\n\n\n\nconst SamuraiJSApp = () => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    )\n}\n\n\n\nexport default SamuraiJSApp\n\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n\n\n\nReactDOM.render(\n    // <React.StrictMode>\n        <App />,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}